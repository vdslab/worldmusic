{"version":3,"sources":["components/draw_raderchart.js","api.js","components/colorLegend.js","components/draw_regionHeatmap.js","components/selectFeature.js","components/RegionHeatMap.js","components/FeatureVis.js","components/FeatureWorldmap.js","components/display_similarsongs.js","components/Song.js","components/show_Ranking.js","components/SimilarSongs.js","components/draw_swarmplt.js","components/Detail.js","components/aboutFeatureAndData.js","components/drow_worldmap.js","components/WorldMap.js","components/CountryHeatMap.js","components/draw_bargraph.js","components/Bargraph.js","components/JudgeVis.js","components/Header.js","components/Footer.js","App.js","stores/index.js","index.js","stores/details.js"],"names":["RaderChart","data","dispatch","useDispatch","selectClicked","useSelector","state","detail","checkFeatureClicked","checkRaderFeatureClicked","useData","len","length","r","rs","perimeters","perimetersPoint","tick","score","scorePoint","c","Math","PI","tooltip","d3","_r","i","key","x","cos","y","sin","push","value","toFixed","loudness","xs","ys","name","legend","xp","yp","margin","svgWidth","svgHeight","useEffect","changeCheckRaderFeatureClicked","map","index","changeSelectClicked","viewBox","style","border","d","fill","stroke","strokeWidth","t","textAnchor","dominantBaseline","fontSize","userSelect","p","to","smooth","offset","onClick","changeFeature","changeChoosedFeature","cursor","textDecoration","x1","y1","x2","y2","id","onMouseMove","e","pageY","pageX","html","onMouseLeave","fillOpacity","className","cx","cy","buildParams","args","params","URLSearchParams","append","toString","sendRequest","path","a","query","fetch","request","json","fetchSwarmplt","startMonth","feature","country","fetchSongData","endMonth","musicId","fetchData","startmonth","region","fetchGLtop","fetchJPtop","fetchDectop","fetchWorldMapData","fetchBarData","regionId","fetchRegionHeatMapData","fetchJPGLTopStreamCountry","fetchgetDECStreamCountry","fetchgetHeatMapMinMax","colorLegend","props","max","min","color","url","n","aboutColorGradations","floor","pow","ceil","round","w","width","height","stopColor","item","VerticalAxis","yAxis","h","checkRegionCheck","checkRegionClicked","transform","changeCheckRegionClicked","changeRegionId","changeJudgeVis","HorizontalAxis","term","start","HeatMapChart","useState","clicked","setPos","heatMapData","Max","Min","startdays","featureValue","setFeatureValue","colorjudge","opacityjudge","justifyContent","alignItems","end","s","j","endmonth","String","Number","split","undefined","onHover","opacity","selectFeature","onChange","event","target","element","RegionHeatMap","checkMin","checkMax","isRegionShowed","aveWeight","Asia","Africa","MiddleEast","Oceania","NorthAmerica","CentralAmerica","SouthAmerica","NorthEurope","EastEurope","WestEurope","SouthEurope","countriesAveWeight","setHeatMapData","showed","setShowed","Infinity","changeIsRegionShowed","countryid","changeMax","changeMin","display","TextDetail","musicKey","marginBottom","tempo","time_signature","mode","Gltop","musicid","top","setTop","Song","listnumber","Jptop","Dectop","choosedCountry","choosedFeature","choosedPeriod","countryNumber","countries","setCountries","metaData","setMetaData","setData","setKey","spotify","process","authOptions","headers","Authorization","Buffer","from","form","grant_type","post","error","response","body","statusCode","token","access_token","options","get","paddingTop","paddingBottom","href","external_urls","rel","artists","item2","controls","src","preview_url","FeatureVis","class","Worldmap","features","worldMapData","onCountryJapanese","setOnCountryJapanese","onCountryEnglish","setOnCountryEnglish","projection","center","translate","scale","properties","ISO_A2","strokeOpacity","countryname","NAME_JA","DrowWorldMap","setFeatures","res","topojson","objects","worldmap","FeatureWorldmap","display_similarsongs","isSwmpltChoosed","similarSongs","setSimilarSongs","console","log","acousticness","danceability","energy","instrumentalness","liveness","speechiness","valence","tracks","album","images","float","paddingRight","ShowRanking","sorted","dbData","setDbData","filters","filter","self","findIndex","sort","b","changeMusicId","SimilarSongs","Swarmplt","isSwmpltShowed","ref","useRef","svg","current","swarmpltMin","swarmpltMax","musicdata","stream","changeSwarmpltMax","changeSwarmpltMin","Object","keys","m","attr","draw","swarmplt","select","xScale","scaleLinear","domain","extent","range","streamDomain","sqrt","size","simulation","forceSimulation","force","forceX","strength","forceY","forceCollide","alphaDecay","alpha","on","selectAll","join","changeIsSwmpltChoosed","xAxis","setTimeout","classed","transition","duration","call","AboutQuestion","selectedCount","onMouseEnter","alert","CheckBox","startMonths","isSwarmpltShowed","newStartMonth","newCountries","changeStartMonth","changeCountry","changeSlectedCount","deleteData","Delatebutton","changeIsSwmpltShowed","Detail","checkboxCountry","setCheckboxCountry","checkboxStartMonths","setCheckboxStartMonths","checkboxIsSwartmpltShowed","setCheckboxIsSwarmpltShowed","aboutFeatureAndData","WorldMap","cMax","cMin","setMax","setMin","setWorldMapData","weightAve","setShow","setClientX","setClientY","onCountry","setOnCountry","onMouseOver","clientX","clientY","onMouseOut","changeChoosedCountry","changeDisplay","CountryHeatMap","countryids","period","setClicked","year","judge","selectedCountry","selectedStartmonth","selectedSwmplt","isdouble","addData","changeEndMonth","changeChoosedPeriod","BarChart","isChecked","setIsChecked","barData","setBarData","cnt","controlWidth","setControlWidth","regionMax","regionMin","handleChange","cid","type","checked","Bar","JudgeVis","judgeVis","Bargraph","Visualization","FeatureAndData","View","active","setActive","exact","Footer","App","Header","reducer","combineReducers","detailReducer","store","configureStore","render","document","querySelector","initialState","slice","createSlice","reducers","action","payload","changeSorted","actions"],"mappings":"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","file":"static/js/main.62d407fa.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"../tooltip.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeChoosedFeature,\r\n  changeFeature,\r\n  changeSelectClicked,\r\n  changeCheckRaderFeatureClicked\r\n} from \"../stores/details\";\r\nimport \"./RegionHeatMap\";\r\nimport \"../style.css\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\n\r\nfunction RaderChart({ data }) {\r\n  const dispatch = useDispatch();\r\n  const selectClicked = useSelector((state) => state.detail.selectClicked);\r\n  const checkFeatureClicked = useSelector((state) => state.detail.checkRaderFeatureClicked);\r\n\r\n  const useData = [\r\n    \"acousticness\",\r\n    \"danceability\",\r\n    \"energy\",\r\n    \"instrumentalness\",\r\n    \"liveness\",\r\n    \"loudness\",\r\n    \"speechiness\",\r\n    \"valence\",\r\n  ];\r\n\r\n  const len = useData.length;\r\n  const posX = 50;\r\n  const posY = 50;\r\n  const r = 50;\r\n  const rs = [r, r * 0.8, r * 0.6, r * 0.4, r * 0.2];\r\n\r\n  let perimeters = [\"\", \"\", \"\", \"\", \"\"];\r\n  const perimetersPoint = [];\r\n  const tick = [];\r\n  let score = \"\";\r\n  const scorePoint = [];\r\n  const c = Math.PI / 180;\r\n  const tooltip = d3.select(\".tooltip-rader\");\r\n\r\n  for (let _r = 0; _r < rs.length; _r++) {\r\n    for (let i = 0; i <= len; i++) {\r\n      let key = useData[i];\r\n      if (i === len) {\r\n        key = useData[0];\r\n      }\r\n      const x = posX + rs[_r] * Math.cos(((360 / len) * i - 90) * c);\r\n      const y = posY + rs[_r] * Math.sin(((360 / len) * i - 90) * c);\r\n      if (i !== 0) {\r\n        perimeters[_r] += \"L \" + x + \",\" + y + \" \";\r\n      } else {\r\n        perimeters[_r] += \"M \" + x + \",\" + y + \" \";\r\n        tick.push({ x: x, y: y, value: (1 - _r / 5).toFixed(1) });\r\n      }\r\n      if (i === len) {\r\n        perimeters[_r] += \"z\";\r\n      }\r\n\r\n      if (rs[_r] === r) {\r\n        let value = data[0][key].toFixed(3);\r\n\r\n        if (key === \"loudness\") {\r\n          value = ((data[0].loudness + 60) / 60).toFixed(3);\r\n        }\r\n\r\n        const xs = posX + r * value * Math.cos(((360 / len) * i - 90) * c);\r\n        const ys = posY + r * value * Math.sin(((360 / len) * i - 90) * c);\r\n\r\n        if (i !== 0) {\r\n          score += \"L \" + xs + \",\" + ys + \" \";\r\n        } else {\r\n          score += \"M \" + xs + \",\" + ys + \" \";\r\n        }\r\n        if (i === len) {\r\n          score += \"z\";\r\n        } else {\r\n          scorePoint.push({ x: xs, y: ys, name: key, value: value });\r\n          perimetersPoint.push({\r\n            x: x,\r\n            y: y,\r\n            name: key,\r\n            legend: false,\r\n            value: value,\r\n          });\r\n          const xp = posX + rs[_r] * 1.2 * Math.cos(((360 / len) * i - 90) * c);\r\n          const yp =\r\n            posY + rs[_r] * 1.15 * Math.sin(((360 / len) * i - 90) * c);\r\n          perimetersPoint.push({ x: xp, y: yp, name: key, legend: true });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const margin = {\r\n    left: 35,\r\n    right: 20,\r\n    top: 10,\r\n    bottom: 15,\r\n  };\r\n  const contentWidth = 100;\r\n  const contentHeight = 100;\r\n\r\n  const svgWidth = margin.left + margin.right + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n\r\n  useEffect(() => {\r\n    if (selectClicked) {\r\n      dispatch(\r\n        changeCheckRaderFeatureClicked(checkFeatureClicked.map((c, index) => false))\r\n      );\r\n      dispatch(changeSelectClicked(false));\r\n    }\r\n  }, [selectClicked]);\r\n\r\n  return (\r\n    <div>\r\n      <svg\r\n        viewBox={`${-margin.left} ${-margin.top} ${svgWidth + 10} ${svgHeight}`}\r\n        style={{ border: \"solid 0px\" }}\r\n      >\r\n        <g>\r\n          {perimeters.map((d, i) => {\r\n            return (\r\n              <g key={i}>\r\n                <path fill=\"none\" stroke=\"lightgray\" d={d} strokeWidth=\"0.5\" />\r\n              </g>\r\n            );\r\n          })}\r\n          {tick.map((t, i) => {\r\n            return (\r\n              <g key={i}>\r\n                <text\r\n                  x={t.x}\r\n                  y={t.y}\r\n                  textAnchor=\"middle\"\r\n                  dominantBaseline=\"central\"\r\n                  fontSize=\"5\"\r\n                  style={{ userSelect: \"none\" }}\r\n                >\r\n                  {t.value}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n          {perimetersPoint.map((p, i) => {\r\n            return (\r\n              <g key={i}>\r\n                {!p.legend ? (\r\n                  <line\r\n                    x1={posX}\r\n                    y1={posY}\r\n                    x2={p.x}\r\n                    y2={p.y}\r\n                    id={p.name + \" \" + p.value}\r\n                    stroke=\"lightgray\"\r\n                    strokeWidth=\"0.5\"\r\n                    onMouseMove={(e) => {\r\n                      tooltip.style(\"visibility\", \"visible\");\r\n                      tooltip\r\n                        .style(\"top\", e.pageY - 20 + \"px\")\r\n                        .style(\"left\", e.pageX + 10 + \"px\")\r\n                        .html(p.value);\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      tooltip.style(\"visibility\", \"hidden\");\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Scroll to=\"ScrollToHeatmap\" smooth={true} offset={-20}>\r\n                    <text\r\n                      x={p.x}\r\n                      y={p.y}\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"central\"\r\n                      onClick={() => {\r\n                        dispatch(\r\n                          changeCheckRaderFeatureClicked(\r\n                            checkFeatureClicked.map((c, index) =>\r\n                              index === i ? true : false\r\n                            )\r\n                          )\r\n                        );\r\n                        dispatch(changeFeature(p.name));\r\n                        dispatch(changeChoosedFeature(\"Yes\"));\r\n                      }}\r\n                      style={\r\n                        checkFeatureClicked[i]\r\n                          ? {\r\n                              userSelect: \"none\",\r\n                              cursor: \"pointer\",\r\n                              fontSize: \"8px\",\r\n                              textDecoration: \"underline\",\r\n                            }\r\n                          : {\r\n                              userSelect: \"none\",\r\n                              cursor: \"pointer\",\r\n                              fontSize: \"5px\",\r\n                            }\r\n                      }\r\n                    >\r\n                      {p.name}\r\n                    </text>\r\n                  </Scroll>\r\n                )}\r\n              </g>\r\n            );\r\n          })}\r\n\r\n          <path\r\n            fill=\"#FF55BB\"\r\n            fillOpacity=\"0.5\"\r\n            stroke=\"#FF0099\"\r\n            strokeWidth=\"0.5\"\r\n            d={score}\r\n          />\r\n          {scorePoint.map((p, i) => {\r\n            return (\r\n              <g key={i}>\r\n                <circle\r\n                  className=\"test\"\r\n                  id={p.name + \" \" + p.value}\r\n                  cx={p.x}\r\n                  cy={p.y}\r\n                  r={1.8}\r\n                  fill=\"white\"\r\n                  fillOpacity={0.6}\r\n                  stroke=\"#FF0099\"\r\n                  strokeWidth={0.5}\r\n                  onMouseMove={(e) => {\r\n                    tooltip.style(\"visibility\", \"visible\");\r\n                    tooltip\r\n                      .style(\"top\", e.pageY - 20 + \"px\")\r\n                      .style(\"left\", e.pageX + 10 + \"px\")\r\n                      .html(p.value);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    tooltip.style(\"visibility\", \"hidden\");\r\n                  }}\r\n                />\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RaderChart;\r\n","function buildParams(args) {\r\n  const params = new URLSearchParams();\r\n  for (const key in args) {\r\n    if (args[key]) {\r\n      params.append(key, args[key]);\r\n    }\r\n  }\r\n  return params.toString();\r\n}\r\n\r\nasync function sendRequest(path, args) {\r\n  const query = buildParams(args);\r\n  const request = await fetch(`/.netlify/functions${path}?${query}`);\r\n  return await request.json();\r\n}\r\n\r\nexport function fetchSwarmplt(startMonth, feature, country) {\r\n  return sendRequest(\"/getSwarmplt\", {\r\n    startMonth: startMonth,\r\n    feature: feature,\r\n    country: country,\r\n  });\r\n}\r\n\r\nexport function fetchSongData(startMonth, endMonth, feature, country, musicId) {\r\n  return sendRequest(\"/getSongData\", {\r\n    startMonth: startMonth,\r\n    endMonth: endMonth,\r\n    feature: feature,\r\n    country: country,\r\n    musicId: musicId,\r\n  });\r\n}\r\n\r\nexport function fetchData(feature, startmonth, region) {\r\n  return sendRequest(\"/getData\", {\r\n    feature: feature,\r\n    startmonth: startmonth,\r\n    region: region,\r\n  });\r\n}\r\n\r\nexport function fetchCountries(musicId) {\r\n  return sendRequest(\"/getRanking\", {\r\n    musicId: musicId,\r\n  });\r\n}\r\n\r\nexport function fetchGLtop() {\r\n  return sendRequest(\"/getGLtop\", {});\r\n}\r\n\r\nexport function fetchJPtop() {\r\n  return sendRequest(\"/getJPtop\", {});\r\n}\r\n\r\nexport function fetchDectop() {\r\n  return sendRequest(\"/getDectop\", {});\r\n}\r\n\r\nexport function fetchWorldMapData(feature, startmonth) {\r\n  return sendRequest(\"/getWorldmapData\", {\r\n    feature: feature,\r\n    startmonth: startmonth,\r\n  });\r\n}\r\n\r\nexport function fetchBarData(feature, startmonth, regionId) {\r\n  return sendRequest(\"/getBarData\", {\r\n    feature: feature,\r\n    startmonth: startmonth,\r\n    regionId: regionId,\r\n  });\r\n}\r\n\r\nexport function fetchRegionHeatMapData(feature, startmonth) {\r\n  return sendRequest(\"/getRegionHeatmapData\", {\r\n    feature: feature,\r\n    startmonth: startmonth,\r\n  });\r\n}\r\n\r\nexport function fetchJPGLTopStreamCountry(musicId) {\r\n  return sendRequest(\"/getJPGLTopStreamCountry\", {\r\n    musicId: musicId,\r\n  });\r\n}\r\n\r\nexport function fetchgetDECStreamCountry(musicId) {\r\n  return sendRequest(\"/getDECStreamCountry\", {\r\n    musicId: musicId,\r\n  });\r\n}\r\n\r\nexport function fetchgetHeatMapMinMax(feature, startmonth) {\r\n  return sendRequest(\"/getHeatMapMinMax\", {\r\n    feature: feature,\r\n    startmonth: startmonth,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst colorLegend = (props) => {\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  //const max = useSelector((state) => state.detail.max);\r\n  //const min = useSelector((state) => state.detail.min);\r\n  const max = props.max;\r\n  const min = props.min;\r\n  const color = props.color;\r\n  const id = props.id;\r\n  const url = \"url('#\"+id+\"')\";\r\n  const w = 250;\r\n  let n = 2;\r\n\r\n  if (feature === \"loudness\") {\r\n    n = 1;\r\n  } else if (feature === \"tempo\") {\r\n    n = 0;\r\n  }\r\n\r\n  const aboutColorGradations = [\r\n    [Math.floor(min * Math.pow(10, n)) / Math.pow(10, n), 0],\r\n  ];\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    const p = (max - min) / 10;\r\n    let value = min + p * i;\r\n    if (i === 10) {\r\n      value = Math.ceil(max * Math.pow(10, n)) / Math.pow(10, n);\r\n    } else {\r\n      value = Math.round(value * Math.pow(10, n)) / Math.pow(10, n);\r\n    }\r\n    aboutColorGradations.push([value, 0 + (w / 10) * i]);\r\n  }\r\n\r\n  return (\r\n    <svg viewBox=\"0 0 265 60\" width={w + 20} height=\"55\">\r\n      <defs>\r\n        <linearGradient id={id}>\r\n        <stop offset=\"0%\" stopColor={d3[color](0)} />\r\n          <stop offset=\"5%\" stopColor={d3[color](0.05)} />\r\n          <stop offset=\"10%\" stopColor={d3[color](0.1)} />\r\n          <stop offset=\"15%\" stopColor={d3[color](0.15)} />\r\n          <stop offset=\"20%\" stopColor={d3[color](0.2)} />\r\n          <stop offset=\"25%\" stopColor={d3[color](0.25)} />\r\n          <stop offset=\"30%\" stopColor={d3[color](0.3)} />\r\n          <stop offset=\"35%\" stopColor={d3[color](0.35)} />\r\n          <stop offset=\"40%\" stopColor={d3[color](0.4)} />\r\n          <stop offset=\"45%\" stopColor={d3[color](0.45)} />\r\n          <stop offset=\"50%\" stopColor={d3[color](0.5)} />\r\n          <stop offset=\"55%\" stopColor={d3[color](0.55)} />\r\n          <stop offset=\"60%\" stopColor={d3[color](0.6)} />\r\n          <stop offset=\"65%\" stopColor={d3[color](0.65)} />\r\n          <stop offset=\"70%\" stopColor={d3[color](0.7)} />\r\n          <stop offset=\"75%\" stopColor={d3[color](0.75)} />\r\n          <stop offset=\"80%\" stopColor={d3[color](0.8)} />\r\n          <stop offset=\"85%\" stopColor={d3[color](0.85)} />\r\n          <stop offset=\"90%\" stopColor={d3[color](0.9)} />\r\n          <stop offset=\"95%\" stopColor={d3[color](0.95)} />\r\n          <stop offset=\"100%\" stopColor={d3[color](1)} />\r\n        </linearGradient>\r\n      </defs>\r\n      <rect x=\"0\" y=\"10\" width={w} height=\"20\" fill={url} />\r\n      {aboutColorGradations.map((item, i) => {\r\n        return (\r\n          <line\r\n            key={i}\r\n            x1={item[1]}\r\n            y1=\"30\"\r\n            x2={item[1]}\r\n            y2=\"40\"\r\n            stroke=\"black\"\r\n          />\r\n        );\r\n      })}\r\n      {aboutColorGradations.map((item, i) => {\r\n        return (\r\n          <text key={i} x={item[1]} y=\"50\" fontSize=\"10\" textAnchor=\"start\">\r\n            {item[0]}\r\n          </text>\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default colorLegend;\r\n","import { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeJudgeVis,\r\n  changeRegionId,\r\n  changeCheckRegionClicked,\r\n} from \"../stores/details\";\r\nimport \"../tooltip.css\";\r\n\r\nfunction VerticalAxis({ len, yAxis, name, h }) {\r\n  const dispatch = useDispatch();\r\n  const checkRegionCheck = useSelector(\r\n    (state) => state.detail.checkRegionClicked\r\n  );\r\n\r\n  return (\r\n    <g>\r\n      <text\r\n        transform={`\r\n                translate(-65 ${h / 2})\r\n               `}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"central\"\r\n        fontSize=\"12\"\r\n        style={{ userSelect: \"none\" }}\r\n      >\r\n        {name}\r\n      </text>\r\n      {yAxis.map((y, i) => {\r\n        return (\r\n          <g transform={`translate(0, ${len * i + len / 2})`} key={i}>\r\n            <text\r\n              x=\"-5\"\r\n              textAnchor=\"end\"\r\n              dominantBaseline=\"central\"\r\n              onClick={() => {\r\n                dispatch(\r\n                  changeCheckRegionClicked(\r\n                    checkRegionCheck.map((c, index) =>\r\n                      index === i ? true : false\r\n                    )\r\n                  )\r\n                );\r\n                dispatch(changeRegionId(y[0]));\r\n                dispatch(changeJudgeVis(2)); //国ヒートマップ\r\n              }}\r\n              style={\r\n                checkRegionCheck[i]\r\n                  ? {\r\n                      userSelect: \"none\",\r\n                      cursor: \"pointer\",\r\n                      fontSize: \"13px\",\r\n                      textDecoration: \"underline\",\r\n                    }\r\n                  : { userSelect: \"none\", cursor: \"pointer\", fontSize: \"8px\" }\r\n              }\r\n            >\r\n              {y[1]}\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n}\r\n\r\nfunction HorizontalAxis({ len, term, name, w }) {\r\n  return (\r\n    <g>\r\n      <text\r\n        transform={`translate(${w / 2} -40)`}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"central\"\r\n        fontSize=\"12\"\r\n        style={{ userSelect: \"none\" }}\r\n      >\r\n        {name}\r\n      </text>\r\n      {term.map((t, i) => {\r\n        return (\r\n          <g transform={`translate(${len * i + len}, -15) rotate(-45)`} key={i}>\r\n            <text\r\n              x=\"0\"\r\n              textAnchor=\"middle\"\r\n              dominantBaseline=\"central\"\r\n              fontSize=\"8\"\r\n              style={{ userSelect: \"none\" }}\r\n              // onClick={() => {\r\n              //   changeInfo(t.start, t.end);\r\n              //   dispatch(changeJudgeVis(1)) //世界地図\r\n              // }}\r\n            >\r\n              {t.start}\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n}\r\n\r\nfunction HeatMapChart(props) {\r\n  const dispatch = useDispatch();\r\n  const [clicked, setClicked] = useState(-1);\r\n  const [pos, setPos] = useState(null);\r\n\r\n  const heatMapData = props.data;\r\n  const Max = props.max;\r\n  const Min = props.min;\r\n  const yAxis = props.y;\r\n\r\n  const startdays = [\r\n    \"2017-01\",\r\n    \"2017-04\",\r\n    \"2017-07\",\r\n    \"2017-10\",\r\n    \"2018-01\",\r\n    \"2018-04\",\r\n    \"2018-07\",\r\n    \"2018-10\",\r\n    \"2019-01\",\r\n    \"2019-04\",\r\n    \"2019-07\",\r\n    \"2019-10\",\r\n    \"2020-01\",\r\n    \"2020-04\",\r\n    \"2020-07\",\r\n    \"2020-10\",\r\n    \"2021-01\",\r\n    \"2021-04\",\r\n    \"2021-07\",\r\n  ];\r\n\r\n  const term = [\r\n    { start: \"2017-01\", end: \"2017-03\" },\r\n    { start: \"2017-04\", end: \"2017-06\" },\r\n    { start: \"2017-07\", end: \"2017-09\" },\r\n    { start: \"2017-10\", end: \"2017-12\" },\r\n    { start: \"2018-01\", end: \"2018-03\" },\r\n    { start: \"2018-04\", end: \"2018-06\" },\r\n    { start: \"2018-07\", end: \"2018-09\" },\r\n    { start: \"2018-10\", end: \"2018-12\" },\r\n    { start: \"2019-01\", end: \"2019-03\" },\r\n    { start: \"2019-04\", end: \"2019-06\" },\r\n    { start: \"2019-07\", end: \"2019-09\" },\r\n    { start: \"2019-10\", end: \"2019-12\" },\r\n    { start: \"2020-01\", end: \"2020-03\" },\r\n    { start: \"2020-04\", end: \"2020-06\" },\r\n    { start: \"2020-07\", end: \"2020-09\" },\r\n    { start: \"2020-10\", end: \"2020-12\" },\r\n    { start: \"2021-01\", end: \"2021-03\" },\r\n    { start: \"2021-04\", end: \"2021-06\" },\r\n    { start: \"2021-07\", end: \"2021-09\" },\r\n  ];\r\n\r\n  const japaneseRegions = [\r\n    [\"Asia\", \"アジア\"],\r\n    [\"Africa\", \"アフリカ\"],\r\n    [\"MiddleEast\", \"中東\"],\r\n    [\"Oceania\", \"オセアニア\"],\r\n    [\"NorthAmerica\", \"北米\"],\r\n    [\"CentralAmerica\", \"中米\"],\r\n    [\"SouthAmerica\", \"南米\"],\r\n    [\"NorthEurope\", \"北欧\"],\r\n    [\"EastEurope\", \"東欧\"],\r\n    [\"WestEurope\", \"西欧\"],\r\n    [\"SouthEurope\", \"南欧\"],\r\n  ];\r\n\r\n  const margin = {\r\n    left: 100,\r\n    right: 30,\r\n    top: 45,\r\n    bottom: 10,\r\n  };\r\n  const contentWidth = 300;\r\n  const contentHeight = 170;\r\n  const svgWidth = margin.left + margin.right + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n  const tooltip = d3.select(\".tooltip-regionheat\");\r\n  const [featureValue, setFeatureValue] = useState(null);\r\n  const len = 15;\r\n\r\n  const colorjudge = (item, start) => {\r\n    let color = \"#F2F2F2\";\r\n\r\n    if (item) {\r\n      color = d3.interpolateTurbo(opacityjudge(item, start));\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const opacityjudge = (item, start) => {\r\n    let opacity = 0;\r\n    let opacityMax = 1;\r\n    let opacityMin = 0.1;\r\n    opacity =\r\n      ((opacityMax - opacityMin) * (item - Min)) / (Max - Min) + opacityMin;\r\n    return opacity;\r\n  };\r\n\r\n  function onHover(e, value) {\r\n    if (value === undefined) {\r\n      setFeatureValue(\"（データなし）\");\r\n    } else {\r\n      setFeatureValue(value.toFixed(3));\r\n    }\r\n    tooltip.style(\"visibility\", \"visible\");\r\n    tooltip\r\n      .style(\"top\", e.pageY - 20 + \"px\")\r\n      .style(\"left\", e.pageX + 10 + \"px\")\r\n      .html(featureValue);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <svg\r\n        viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}\r\n        style={{ border: \"solid 0px\" }}\r\n      >\r\n        <VerticalAxis\r\n          len={len}\r\n          yAxis={japaneseRegions}\r\n          name={\"地域\"}\r\n          h={contentHeight}\r\n        />\r\n        <HorizontalAxis len={len} term={term} name={\"期間\"} w={contentWidth} />\r\n        <rect\r\n          x=\"0\"\r\n          y=\"0\"\r\n          fill=\"lightgray\"\r\n          height={len * yAxis.length}\r\n          width={len * startdays.length}\r\n        />\r\n\r\n        <g\r\n          onMouseLeave={() => {\r\n            setPos(null);\r\n            // .style(\"visibility\", \"hidden\");\r\n          }}\r\n        >\r\n          {yAxis.map((y, i) => {\r\n            return startdays.map((s, j) => {\r\n              const startmonth = s;\r\n              const year = String(Number(startmonth.split(\"-\")[0]));\r\n              let endmonth = String(Number(startmonth.split(\"-\")[1]) + 2);\r\n              if (endmonth.length === 1) {\r\n                endmonth = \"0\" + endmonth;\r\n              }\r\n\r\n              return (\r\n                <g key={i * startdays.length + j}>\r\n                  <rect\r\n                    className=\"cell\"\r\n                    x={len * j}\r\n                    y={len * i}\r\n                    width={len}\r\n                    height={len}\r\n                    fill={colorjudge(heatMapData[y][s], s)}\r\n                    // onClick={() => {\r\n                    //   setClicked(i * startdays.length + j);\r\n                    //   dispatch(changeRegionId(y));\r\n                    //   dispatch(changeStartMonth(s));\r\n                    //   dispatch(changeChoosedPeriod(\"Yes\"));\r\n                    //   dispatch(changeEndMonth(year + \"-\" + endmonth));\r\n                    //   dispatch(changeJudgeVis(3)) //棒グラフ\r\n                    // }}\r\n                    //onMouseEnter={() => {\r\n                    // setPos(heatMapData[y][s].toFixed(2) || \"\");\r\n                    //}}\r\n                    onMouseMove={(e) => onHover(e, heatMapData[y][s])}\r\n                    onMouseLeave={() => {\r\n                      tooltip.style(\"visibility\", \"hidden\");\r\n                    }}\r\n                  ></rect>\r\n                  <rect\r\n                    x={len * j}\r\n                    y={len * i}\r\n                    width={len - 0.5}\r\n                    height={len - 0.5}\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    opacity={clicked === i * startdays.length + j ? 1 : 0}\r\n                  />\r\n                </g>\r\n              );\r\n            });\r\n          })}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeatMapChart;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { feature } from \"topojson\";\r\nimport {\r\n  changeChoosedFeature,\r\n  changeFeature,\r\n  changeSelectClicked,\r\n} from \"../stores/details\";\r\n\r\nconst selectFeature = () => {\r\n  const dispatch = useDispatch();\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const elements = [\r\n    \"acousticness\",\r\n    \"danceability\",\r\n    \"energy\",\r\n    \"instrumentalness\",\r\n    \"liveness\",\r\n    \"loudness\",\r\n    \"mode\",\r\n    \"speechiness\",\r\n    \"tempo\",\r\n    \"time_signature\",\r\n    \"valence\",\r\n  ];\r\n  return (\r\n    <div>\r\n      <select\r\n        value={feature}\r\n        onChange={(event) => {\r\n          dispatch(changeChoosedFeature(\"Yes\"));\r\n          dispatch(changeFeature(event.target.value));\r\n          dispatch(changeSelectClicked(true));\r\n        }}\r\n      >\r\n        {elements.map((element) => {\r\n          return <option value={element}>{element}</option>;\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default selectFeature;\r\n","import React from \"react\";\r\nimport HeatMapChart from \"./draw_regionHeatmap\";\r\nimport SelectFeature from \"./selectFeature\";\r\nimport ColorLegend from \"./colorLegend\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchRegionHeatMapData, fetchgetHeatMapMinMax } from \"../api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeMax, changeMin, changeIsRegionShowed } from \"../stores/details\";\r\n\r\nconst RegionHeatMap = () => {\r\n  const dispatch = useDispatch();\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const Max = useSelector((state) => state.detail.max);\r\n  const Min = useSelector((state) => state.detail.min);\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed); //地域ヒートマップが表示されているか否か\r\n\r\n  const startdays = [\r\n    \"2017-01\",\r\n    \"2017-04\",\r\n    \"2017-07\",\r\n    \"2017-10\",\r\n    \"2018-01\",\r\n    \"2018-04\",\r\n    \"2018-07\",\r\n    \"2018-10\",\r\n    \"2019-01\",\r\n    \"2019-04\",\r\n    \"2019-07\",\r\n    \"2019-10\",\r\n    \"2020-01\",\r\n    \"2020-04\",\r\n    \"2020-07\",\r\n    \"2020-10\",\r\n    \"2021-01\",\r\n    \"2021-04\",\r\n    \"2021-07\",\r\n  ];\r\n\r\n  const regions = [\r\n    \"Asia\",\r\n    \"Africa\",\r\n    \"MiddleEast\",\r\n    \"Oceania\",\r\n    \"NorthAmerica\",\r\n    \"CentralAmerica\",\r\n    \"SouthAmerica\",\r\n    \"NorthEurope\",\r\n    \"EastEurope\",\r\n    \"WestEurope\",\r\n    \"SouthEurope\",\r\n  ];\r\n\r\n  const aveWeight = {\r\n    Asia: {},\r\n    Africa: {},\r\n    MiddleEast: {},\r\n    Oceania: {},\r\n    NorthAmerica: {},\r\n    CentralAmerica: {},\r\n    SouthAmerica: {},\r\n    NorthEurope: {},\r\n    EastEurope: {},\r\n    WestEurope: {},\r\n    SouthEurope: {},\r\n  };\r\n\r\n  const countriesAveWeight = {};\r\n  const [heatMapData, setHeatMapData] = useState([]);\r\n\r\n  let checkMin;\r\n  let checkMax;\r\n  const [showed, setShowed] = useState(false); //地域ヒートマップを表示していいか否か\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let min = Infinity;\r\n      let max = -Infinity;\r\n      checkMin = min; //minが変更されたかをチェックする変数\r\n      checkMax = max; //maxが変更されたかをチェックする変数\r\n      setShowed(false); //データが揃ってから見せる\r\n      dispatch(changeIsRegionShowed(false)); //データが揃ってから見せる\r\n      for (let i = 0; i < startdays.length; i++) {\r\n        //最大値・最小値を取得するために、まず３ヶ月ごとで各国のデータを取得する\r\n        let minmaxdata = await fetchgetHeatMapMinMax(feature, startdays[i]);\r\n        minmaxdata.map((d) => {\r\n          if (!countriesAveWeight[d.countryid]) {\r\n            countriesAveWeight[d.countryid] = {};\r\n          }\r\n          countriesAveWeight[d.countryid][startdays[i]] = d.value;\r\n          if (d.value < min) {\r\n            min = d.value;\r\n          }\r\n          if (d.value > max) {\r\n            max = d.value;\r\n          }\r\n        });\r\n        //地域ごとのデータを取得する\r\n        let data = await fetchRegionHeatMapData(feature, startdays[i]);\r\n        data.map((d) => {\r\n          aveWeight[d.region][startdays[i]] = d.value;\r\n        });\r\n      }\r\n      //minとmaxが変更されたので、セットする（データも）\r\n      dispatch(changeMax(max));\r\n      dispatch(changeMin(min));\r\n      setHeatMapData(aveWeight);\r\n      //チェック用変数と値が異なれば（＝最大値最小値の準備おk）、地域ヒートマップを表示する\r\n      if (max != checkMax && min != checkMin) {\r\n        checkMin = min;\r\n        checkMax = max;\r\n        setShowed(true);\r\n      }\r\n    })();\r\n  }, [feature]);\r\n\r\n  if (!showed) {\r\n    return (\r\n      <div className=\"card-content\">\r\n        <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    //地域ヒートマップを表示している扱いにする\r\n    dispatch(changeIsRegionShowed(true));\r\n  }\r\n  return (\r\n    <div className=\"card-content p-1\" style={{ width: \"100%\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div className=\"card-content m-1\">\r\n          <div className=\"content\">\r\n            <SelectFeature />\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content p-2 colorLegend\" style={{ height: \"10%\" }}>\r\n          <div className=\"content\" style={{ height: \"100%\" }}>\r\n            <ColorLegend\r\n              max={Max}\r\n              min={Min}\r\n              color={\"interpolateTurbo\"}\r\n              id={\"gradient1\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <HeatMapChart data={heatMapData} max={Max} min={Min} y={regions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionHeatMap;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { forceSimulation, forceX, forceY, forceCollide } from \"d3-force\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeCountry,\r\n  changeChoosedCountry,\r\n  changeChoosedFeature,\r\n  changeChoosedPeriod,\r\n} from \"../stores/details\";\r\nimport {\r\n  fetchCountries,\r\n  fetchGLtop,\r\n  fetchJPtop,\r\n  fetchDectop,\r\n  fetchJPGLTopStreamCountry,\r\n  fetchgetDECStreamCountry,\r\n} from \"../api\";\r\nimport * as d3 from \"d3\";\r\n\r\nimport { fetchSongData } from \"../api\";\r\nimport RaderChart from \"./draw_raderchart\";\r\nimport request from \"request\";\r\nimport FeatureWorldmap from \"./FeatureWorldmap\";\r\n\r\nconst TextDetail = ({ data, musicKey }) => {\r\n  const keyDict = {\r\n    0: \"ハ\",\r\n    1: \"嬰ハ/変二\",\r\n    2: \"ニ\",\r\n    3: \"嬰ニ/変ホ\",\r\n    4: \"ホ\",\r\n    5: \"ヘ\",\r\n    6: \"嬰ヘ/変ト\",\r\n    7: \"ト\",\r\n    8: \"嬰ト/変イ\",\r\n    9: \"イ\",\r\n    10: \"嬰イ/変ロ\",\r\n    11: \"ロ\",\r\n  };\r\n  return (\r\n    <div\r\n      className=\"has-text-centered\"\r\n      style={{ width: \"100%\", fontSize: \"0.9rem\" }}\r\n    >\r\n      <p style={{ marginBottom: \"0px\", cursor: \"default\" }}>\r\n        テンポ：{Math.round(data[0].tempo)}　 拍子：{data[0].time_signature}　\r\n        調：{keyDict[musicKey]}\r\n        {data[0].mode == 0 ? \"短調\" : \"長調\"}\r\n      </p>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Gltop = () => {\r\n  const [top, setTop] = useState({ musicid: 1 });\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchGLtop();\r\n      setTop({ musicid: data[0].musicid });\r\n    })();\r\n  }, []);\r\n  return <Song id={top.musicid} listnumber={0} />;\r\n};\r\n\r\nconst Jptop = () => {\r\n  const [top, setTop] = useState({ musicid: 1 });\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchJPtop();\r\n      setTop({ musicid: data[0].musicid });\r\n    })();\r\n  }, []);\r\n  return <Song id={top.musicid} listnumber={1} />;\r\n};\r\n\r\nconst Dectop = () => {\r\n  const [top, setTop] = useState({ musicid: 1 });\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchDectop();\r\n      setTop({ musicid: data[0].musicid });\r\n    })();\r\n  }, []);\r\n  return <Song id={top.musicid} listnumber={2} />;\r\n};\r\n\r\nconst Song = (props) => {\r\n  const dispatch = useDispatch();\r\n  const country = useSelector((state) => state.detail.country);\r\n  const choosedCountry = useSelector((state) => state.detail.choosedCountry);\r\n  const choosedFeature = useSelector((state) => state.detail.choosedFeature);\r\n  const choosedPeriod = useSelector((state) => state.detail.choosedPeriod);\r\n\r\n  const musicId = props.id;\r\n  const countryNumber = props.listnumber;\r\n  //ここで渡されたtop3の配信されている国を取得して表示する。\r\n  const [countries, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (countryNumber === 2) {\r\n        const data = await fetchgetDECStreamCountry(musicId);\r\n        setCountries(data);\r\n      } else {\r\n        const data = await fetchJPGLTopStreamCountry(musicId);\r\n        setCountries(data);\r\n      }\r\n    })();\r\n  }, [musicId]); //変化するものを配列に入れておくこと。\r\n  const [metaData, setMetaData] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [key, setKey] = useState(null);\r\n  const spotify = {\r\n    ClientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    ClientSecret: process.env.REACT_APP_SPOTIFY_CLIENT_SECRET,\r\n  };\r\n\r\n  let authOptions = {\r\n    url: \"https://accounts.spotify.com/api/token\",\r\n    headers: {\r\n      Authorization:\r\n        \"Basic \" +\r\n        new Buffer.from(spotify.ClientId + \":\" + spotify.ClientSecret).toString(\r\n          \"base64\"\r\n        ),\r\n    },\r\n    form: {\r\n      grant_type: \"client_credentials\",\r\n    },\r\n    json: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchSongData(\"\", \"\", \"\", \"ALL\", musicId);\r\n      setData(data);\r\n      request.post(authOptions, function (error, response, body) {\r\n        if (!error && response.statusCode === 200 && data.length > 0) {\r\n          // use the access token to access the Spotify Web API\r\n          const token = body.access_token;\r\n          const options = {\r\n            url: `https://api.spotify.com/v1/tracks/${musicId}`,\r\n\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n            json: true,\r\n          };\r\n          request.get(options, function (error, response, body) {\r\n            setMetaData(body);\r\n          });\r\n        }\r\n      });\r\n\r\n      request.post(authOptions, function (error, response, body) {\r\n        if (!error && response.statusCode === 200 && data.length > 0) {\r\n          // use the access token to access the Spotify Web API\r\n          const token = body.access_token;\r\n          const options = {\r\n            url: `https://api.spotify.com/v1/audio-features/${musicId}`,\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n            json: true,\r\n          };\r\n          request.get(options, function (error, response, body) {\r\n            setKey(body.key);\r\n          });\r\n        }\r\n      });\r\n    })();\r\n  }, [musicId]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"card-content\"\r\n        style={{ paddingTop: \"12px\", paddingBottom: \"12px\" }}\r\n      >\r\n        <div className=\"content\">\r\n          {data.length > 0 ? (\r\n            <div>\r\n              <div>\r\n                <a\r\n                  href={metaData?.external_urls.spotify}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <b style={{ fontSize: \"1.25rem\" }}>{data[0]?.name}</b>\r\n                </a>\r\n                <br />\r\n                <div style={{ fontSize: \"0.85rem\" }}>\r\n                  アーティスト : &ensp;\r\n                  {metaData?.artists.map((item2, j) => {\r\n                    return (\r\n                      <a\r\n                        href={item2.external_urls.spotify}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {j !== 0 ? \" / \" : []}\r\n                        {item2.name}\r\n                      </a>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <br />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  paddingTop: \"1px\",\r\n                }}\r\n              >\r\n                <RaderChart data={data} />\r\n                <TextDetail data={data} musicKey={key} />\r\n              </div>\r\n              <audio\r\n                controls\r\n                src={metaData?.preview_url}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p style={{ fontSize: \"1.25rem\" }}>\r\n                データが取得できませんでした。\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* <div\r\n        className=\"card-content\"\r\n        style={{ paddingTop: \"12px\", paddingBottom: \"12px\" }}\r\n      > */}\r\n      {data.length > 0 ? (\r\n        <div className=\"content\">\r\n          {/* <div className=\"buttons are-small\">\r\n              {countries.map((element) => {\r\n                return (\r\n                  <button\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      dispatch(changeCountry(element.countryid));\r\n                      dispatch(changeChoosedCountry(\"Yes\"));\r\n                    }}\r\n                  >\r\n                    {element.countryid}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div> */}\r\n          <FeatureWorldmap data={countries} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"content\"></div>\r\n      )}\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FeatureVis = () => {\r\n  // ここで最新のグローバルtop3を取得してSongに渡す（ここで最新の最新のグローバルtop3を取得＋それが配信されている国を取得してSongに渡す場合、共通関数使えないから×）。\r\n  const [top3, setTop3] = useState([\r\n    { musicid: \"\" },\r\n    { musicid: \"\" },\r\n    { musicid: \"\" },\r\n  ]);\r\n\r\n  return (\r\n    <div class=\"tile is-ancestor\">\r\n      <div class=\"tile is-parent\">\r\n        <article class=\"tile is-child box\">\r\n          <Gltop />\r\n        </article>\r\n      </div>\r\n      <div class=\"tile is-parent\">\r\n        <article class=\"tile is-child box\">\r\n          <Jptop />\r\n        </article>\r\n      </div>\r\n      <div class=\"tile is-parent\">\r\n        <article class=\"tile is-child box\">\r\n          <Dectop />\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureVis;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { select } from \"d3-selection\";\r\nimport * as topojson from \"topojson\";\r\nimport { fetchData, fetchWorldMapData } from \"../api\";\r\nimport {\r\n  changeCountry,\r\n  changeFeature,\r\n  changeDisplay,\r\n  changeChoosedCountry,\r\n  changeMin,\r\n  changeMax,\r\n} from \"../stores/details\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../tooltip.css\";\r\nimport \"../../src/style.css\";\r\n\r\nconst Worldmap = ({ features, data }) => {\r\n  const worldMapData = data;\r\n  const [onCountryJapanese, setOnCountryJapanese] = useState(null);\r\n  const [onCountryEnglish, setOnCountryEnglish] = useState(null);\r\n\r\n  const margin = {\r\n    left: 10,\r\n    right: 10,\r\n    top: 10,\r\n    bottom: 10,\r\n  };\r\n  const svgWidth = 600;\r\n  const svgHeight = 400;\r\n  const centerPos = [0, 0];\r\n  const scale = 90;\r\n  const projection = d3\r\n    .geoMercator()\r\n    .center(centerPos)\r\n    .translate([svgWidth / 2, svgHeight /2])\r\n    .scale(scale);\r\n  const path = d3.geoPath().projection(projection);\r\n  const tooltip = d3.select(\".tooltip-world\");\r\n\r\n  const colorjudge = (item) => {\r\n    let color = \"#F2F2F2\";\r\n    worldMapData.map((element) => {\r\n      if (element.countryid === item.properties.ISO_A2) {\r\n        color = \"red\";\r\n      }\r\n    });\r\n    return color;\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <svg\r\n          viewBox={`${-margin.left+45} ${-margin.top-55} ${svgWidth} ${svgHeight}`}\r\n          style={{ border: \"solid 0px\" }}\r\n        >\r\n          <g>\r\n            {features.map((item, i) => (\r\n              <path\r\n                d={path(item)}\r\n                fill={colorjudge(item)}\r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n                strokeOpacity=\"0.5\"\r\n                countryname={item}\r\n                onMouseMove={(e) => {\r\n                  setOnCountryJapanese(item.properties.NAME_JA);\r\n                  setOnCountryEnglish(item.properties.ISO_A2);\r\n                  tooltip.style(\"visibility\", \"visible\");\r\n                  tooltip\r\n                    .style(\"top\", e.pageY - 20 + \"px\")\r\n                    .style(\"left\", e.pageX + 10 + \"px\")\r\n                    .html(onCountryJapanese+\"(\"+onCountryEnglish+\")\");\r\n                }}\r\n                onMouseLeave={() => {\r\n                  tooltip.style(\"visibility\", \"hidden\");\r\n                }}\r\n                // onClick={() => {\r\n                //   //console.log(item.properties.ISO_A2);\r\n                //   const c = item.properties.ISO_A2;\r\n                //   dispatch(changeChoosedCountry(\"Yes\"));\r\n                //   dispatch(changeCountry(c));\r\n                //   dispatch(changeDisplay(\"Yes\"));\r\n                // }}\r\n                key={i}\r\n              />\r\n            ))}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DrowWorldMap = (props) => {\r\n  const [features, setFeatures] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`${process.env.PUBLIC_URL}/data/worldmap.json`);\r\n      const data = await res.json();\r\n      const { features } = topojson.feature(data, data.objects.worldmap);\r\n      setFeatures(features);\r\n    })();\r\n  }, []);\r\n  if (features == null) {\r\n    return <p>loading</p>;\r\n  }\r\n  return <Worldmap features={features} data={props.data} />;\r\n};\r\n\r\nconst FeatureWorldmap = (props) => {\r\n  return <DrowWorldMap data={props.data} />;\r\n};\r\n\r\nexport default FeatureWorldmap;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport request from \"request\";\r\nimport { fetchSongData } from \"../api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { style } from \"d3\";\r\nimport \"../style.css\";\r\nfunction display_similarsongs() {\r\n  const spotify = {\r\n    ClientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    ClientSecret: process.env.REACT_APP_SPOTIFY_CLIENT_SECRET,\r\n  };\r\n\r\n  let authOptions = {\r\n    url: \"https://accounts.spotify.com/api/token\",\r\n    headers: {\r\n      Authorization:\r\n        \"Basic \" +\r\n        new Buffer.from(spotify.ClientId + \":\" + spotify.ClientSecret).toString(\r\n          \"base64\"\r\n        ),\r\n    },\r\n    form: {\r\n      grant_type: \"client_credentials\",\r\n    },\r\n    json: true,\r\n  };\r\n\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed);\r\n  const isSwmpltChoosed = useSelector((state) => state.detail.isSwmpltChoosed);\r\n  const country = useSelector((state) => state.detail.country);\r\n  const musicId = useSelector((state) => state.detail.musicid);\r\n  const [similarSongs, setSimilarSongs] = useState([]);\r\n\r\n  console.log(country);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchSongData(\"\", \"\", \"\", \"ALL\", musicId);\r\n      request.post(authOptions, function (error, response, body) {\r\n        if (!error && response.statusCode === 200 && data.length > 0) {\r\n          // use the access token to access the Spotify Web API\r\n          var token = body.access_token;\r\n          var options = {\r\n            url: `https://api.spotify.com/v1/recommendations?limit=1&seed_tracks=${data[0].musicid}&target_acousticness=${data[0].acousticness}&target_danceability=${data[0].danceability}&target_energy=${data[0].energy}&target_instrumentalness=${data[0].instrumentalness}&target_liveness=${data[0].liveness}&target_loudness=${data[0].loudness}&target_mode=${data[0].mode}&target_speechiness=${data[0].speechiness}&target_tempo=${data[0].tempo}&target_time_signature=${data[0].time_signature}&target_valence=${data[0].valence}`,\r\n            //下のように&market=${country}を入れるとスワームプロットが1個以上のときにエラーが起きる\r\n            //url: `https://api.spotify.com/v1/recommendations?limit=1&market=${country}&seed_tracks=${data[0].musicid}&target_acousticness=${data[0].acousticness}&target_danceability=${data[0].danceability}&target_energy=${data[0].energy}&target_instrumentalness=${data[0].instrumentalness}&target_liveness=${data[0].liveness}&target_loudness=${data[0].loudness}&target_mode=${data[0].mode}&target_speechiness=${data[0].speechiness}&target_tempo=${data[0].tempo}&target_time_signature=${data[0].time_signature}&target_valence=${data[0].valence}`,\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n            json: true,\r\n          };\r\n          request.get(options, function (error, response, body) {\r\n            setSimilarSongs(body.tracks);\r\n          });\r\n        }\r\n      });\r\n    })();\r\n  }, [musicId]);\r\n\r\n  if (isSwmpltChoosed && !isRegionShowed) {\r\n    return (\r\n      <div className=\"card-content\">\r\n        <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n      </div>\r\n    );\r\n  } else if (country.length === 0) {\r\n    return (\r\n      <div className=\"card-content\" style={{ height: \"100%\" }}>\r\n        <p style={{ fontSize: \"1.25rem\", marginBottom: \"5px\" }}>類似曲</p>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"card-content\" style={{ height: \"100%\" }}>\r\n      <p style={{ fontSize: \"1.25rem\", marginBottom: \"5px\" }}>類似曲</p>\r\n      {console.log(similarSongs)}\r\n      {similarSongs.map((item, i) => {\r\n        return (\r\n          <div style={{ width: \"100%\", fontSize: \"40\" }}>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"50%\",\r\n                  paddingTop: \"5px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={item.album.images[0].url}\r\n                  width=\"250\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    paddingRight: \"20px\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  paddingTop: \"5px\",\r\n                }}\r\n              >\r\n                <p>\r\n                  <b style={{ fontSize: \"1.2rem\" }}>\r\n                    <a\r\n                      href={item.external_urls.spotify}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {item.name}\r\n                    </a>\r\n                  </b>\r\n                  <br />\r\n                  <div style={{ fontSize: \"0.85rem\" }}>\r\n                    アーティスト：\r\n                    <br />\r\n                    <p>\r\n                      {item.artists.map((item2, j) => {\r\n                        return (\r\n                          <a\r\n                            href={item2.external_urls.spotify}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            {j !== 0 ? \" / \" : []}\r\n                            {item2.name}\r\n                          </a>\r\n                        );\r\n                      })}\r\n                    </p>\r\n                  </div>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default display_similarsongs;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchSongData } from \"../api\";\r\nimport RaderChart from \"./draw_raderchart\";\r\nimport { useSelector } from \"react-redux\";\r\nimport request from \"request\";\r\n\r\nconst TextDetail = ({ data, musicKey }) => {\r\n  const keyDict = {\r\n    0: \"ハ\",\r\n    1: \"嬰ハ/変二\",\r\n    2: \"ニ\",\r\n    3: \"嬰ニ/変ホ\",\r\n    4: \"ホ\",\r\n    5: \"ヘ\",\r\n    6: \"嬰ヘ/変ト\",\r\n    7: \"ト\",\r\n    8: \"嬰ト/変イ\",\r\n    9: \"イ\",\r\n    10: \"嬰イ/変ロ\",\r\n    11: \"ロ\",\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", fontSize: \"0.9rem\" }}>\r\n      <p style={{ marginBottom: \"0px\", cursor: \"default\" }}>\r\n        テンポ：{Math.round(data[0].tempo)}　 拍子：{data[0].time_signature}　\r\n        調：{keyDict[musicKey]}\r\n        {data[0].mode == 0 ? \"短調\" : \"長調\"}\r\n      </p>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Song = () => {\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed);\r\n  const isSwmpltChoosed = useSelector((state) => state.detail.isSwmpltChoosed);\r\n  const country = useSelector((state) => state.detail.country);\r\n  const musicId = useSelector((state) => state.detail.musicid);\r\n  const [metaData, setMetaData] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [key, setKey] = useState(null);\r\n  // console.log(process.env.REACT_APPCLIENTID);\r\n  const spotify = {\r\n    ClientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    ClientSecret: process.env.REACT_APP_SPOTIFY_CLIENT_SECRET,\r\n  };\r\n\r\n  let authOptions = {\r\n    url: \"https://accounts.spotify.com/api/token\",\r\n    headers: {\r\n      Authorization:\r\n        \"Basic \" +\r\n        new Buffer.from(spotify.ClientId + \":\" + spotify.ClientSecret).toString(\r\n          \"base64\"\r\n        ),\r\n    },\r\n    form: {\r\n      grant_type: \"client_credentials\",\r\n    },\r\n    json: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      /**TODO:リクエストの送り方 */\r\n      const data = await fetchSongData(\"\", \"\", \"\", \"ALL\", musicId);\r\n      setData(data);\r\n    })();\r\n  }, [musicId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchSongData(\"\", \"\", \"\", \"ALL\", musicId);\r\n      setData(data);\r\n      request.post(authOptions, function (error, response, body) {\r\n        if (!error && response.statusCode === 200 && data.length > 0) {\r\n          // use the access token to access the Spotify Web API\r\n          const token = body.access_token;\r\n          const options = {\r\n            url: `https://api.spotify.com/v1/tracks/${musicId}`,\r\n\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n            json: true,\r\n          };\r\n          request.get(options, function (error, response, body) {\r\n            setMetaData(body);\r\n          });\r\n        }\r\n      });\r\n\r\n      request.post(authOptions, function (error, response, body) {\r\n        if (!error && response.statusCode === 200 && data.length > 0) {\r\n          // use the access token to access the Spotify Web API\r\n          const token = body.access_token;\r\n          const options = {\r\n            url: `https://api.spotify.com/v1/audio-features/${musicId}`,\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n            json: true,\r\n          };\r\n          request.get(options, function (error, response, body) {\r\n            setKey(body.key);\r\n          });\r\n        }\r\n      });\r\n    })();\r\n  }, [musicId]);\r\n\r\n  if (isSwmpltChoosed && !isRegionShowed) {\r\n    return (\r\n      <div className=\"card-content\" style={{ height: \"100%\" }}>\r\n        <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n      </div>\r\n    );\r\n  } else if (country.length === 0) {\r\n    return (\r\n      <div className=\"card-content\" style={{ height: \"100%\" }}>\r\n        <p style={{ fontSize: \"1.25rem\", marginBottom: \"5px\" }}>曲詳細</p>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"card\" style={{ height: \"100%\" }}>\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          {data.length > 0 ? (\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  paddingTop: \"5px\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <a\r\n                    href={metaData?.external_urls.spotify}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <b style={{ fontSize: \"1.2rem\" }}>{data[0]?.name}</b>\r\n                  </a>\r\n                  <br />\r\n                  <div style={{ fontSize: \"0.85rem\" }}>\r\n                    アーティスト : &ensp;\r\n                    {metaData?.artists.map((item2, j) => {\r\n                      return (\r\n                        <a\r\n                          href={item2.external_urls.spotify}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {j !== 0 ? \" / \" : []}\r\n                          {item2.name}\r\n                        </a>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <TextDetail data={data} musicKey={key} />\r\n                <audio\r\n                  controls\r\n                  src={metaData?.preview_url}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  paddingTop: \"5px\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <a\r\n                    href={metaData?.external_urls.spotify}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <b style={{ fontSize: \"1.2rem\" }}>{data[0]?.name}</b>\r\n                  </a>\r\n                  <br />\r\n                  <div style={{ fontSize: \"0.85rem\" }}>\r\n                    アーティスト : &ensp;\r\n                    {metaData?.artists.map((item2, j) => {\r\n                      return (\r\n                        <a\r\n                          href={item2.external_urls.spotify}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {j !== 0 ? \" / \" : []}\r\n                          {item2.name}\r\n                        </a>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <TextDetail data={data} musicKey={key} />\r\n                <audio\r\n                  controls\r\n                  src={metaData?.preview_url}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  paddingTop: \"5px\",\r\n                }}\r\n              >\r\n                <RaderChart data={data} />\r\n              </div>\r\n              {/* </div> */}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p style={{ fontSize: \"1.25rem\", marginBottom: \"5px\" }}>曲詳細</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeYear } from \"../stores/details\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchSwarmplt } from \"../api\";\r\nimport { fetchSongData } from \"../api\";\r\nimport selectPeriod from \"./selectPeriod\";\r\nimport { changeMusicId } from \"../stores/details\";\r\n\r\nfunction ShowRanking() {\r\n  const dispatch = useDispatch();\r\n\r\n  const spotify = {\r\n    ClientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    ClientSecret: process.env.REACT_APP_SPOTIFY_CLIENT_SECRET,\r\n  };\r\n\r\n  let authOptions = {\r\n    url: \"https://accounts.spotify.com/api/token\",\r\n    headers: {\r\n      Authorization:\r\n        \"Basic \" +\r\n        new Buffer.from(spotify.ClientId + \":\" + spotify.ClientSecret).toString(\r\n          \"base64\"\r\n        ),\r\n    },\r\n    form: {\r\n      grant_type: \"client_credentials\",\r\n    },\r\n    json: true,\r\n  };\r\n\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const endMonth = useSelector((state) => state.detail.endMonth);\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const country = useSelector((state) => state.detail.country);\r\n  const musicid = useSelector((state) => state.detail.musicid);\r\n  const name = useSelector((state) => state.detail.name);\r\n  const sorted = useSelector((state) => state.detail.sorted);\r\n\r\n  const [dbData, setDbData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchSwarmplt(\r\n        startMonth,\r\n        endMonth,\r\n        feature,\r\n        country,\r\n        musicid,\r\n        name\r\n      );\r\n      setDbData(data);\r\n    })();\r\n  }, [startMonth, endMonth, feature, country, musicid, name]);\r\n\r\n  // TODO 曲の重複削除→削除したデータの特徴量をソートして出力\r\n  // idで重複削除、idをクリックしたらidを取得できるようにする\r\n\r\n  const filters = dbData.filter(\r\n    (element, index, self) =>\r\n      self.findIndex((e) => e.name === element.name) === index\r\n  );\r\n\r\n  if (sorted === \"昇順\") {\r\n    filters.sort((a, b) => {\r\n      return a[feature] - b[feature];\r\n    });\r\n  } else {\r\n    filters.sort((b, a) => {\r\n      return a[feature] - b[feature];\r\n    });\r\n  }\r\n\r\n  //console.log(sorted);\r\n\r\n  return (\r\n    <body>\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {/* <thead>\r\n            <tr>\r\n              <th>Pos MusicName</th>\r\n            </tr>\r\n          </thead> */}\r\n          <tbody>\r\n            {filters.map((item, i) => {\r\n              {\r\n                /* console.log(item); */\r\n              }\r\n              return (\r\n                <div onClick={() => dispatch(changeMusicId(item.musicid))}>\r\n                  <tr>\r\n                    <th>{i + 1}</th>\r\n                    <span style={{ color: \"#3273dc\", cursor: \"pointer\" }}>\r\n                      <td>{item.name}</td>\r\n                    </span>\r\n                  </tr>\r\n                </div>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default ShowRanking;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DisplaySimilarSongs from \"./display_similarsongs\";\r\n\r\nconst SimilarSongs = () => {\r\n  return (\r\n    <div>\r\n      <DisplaySimilarSongs />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarSongs;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { forceSimulation, forceX, forceY, forceCollide } from \"d3-force\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchSwarmplt } from \"../api\";\r\nimport * as d3 from \"d3\";\r\nimport {\r\n  changeMax,\r\n  changeMin,\r\n  changeStartMonth,\r\n  changeEndMonth,\r\n  changeCountry,\r\n  changeChoosedCountry,\r\n  changeChoosedPeriod,\r\n  changeIsSwmpltShowed,\r\n  changeMusicId,\r\n  changeIsSwmpltChoosed,\r\n  changeSwarmpltMax,\r\n  changeSwarmpltMin,\r\n} from \"../stores/details\";\r\nimport \"../tooltip.css\";\r\nimport \"../style.css\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\n\r\nconst Swarmplt = ({ width, height, c, s }) => {\r\n  const countryids = useSelector((state) => state.detail.country);\r\n  const period = useSelector((state) => state.detail.startMonth);\r\n  const isSwmpltShowed = useSelector((state) => state.detail.isSwmpltShowed);\r\n  const dispatch = useDispatch();\r\n  const duration = 500;\r\n  const margin = {\r\n    top: 10,\r\n    bottom: 100,\r\n    left: 60,\r\n    right: 60,\r\n  };\r\n\r\n  const innerWidth = width - margin.left - margin.right;\r\n  const innerHeight = height;\r\n\r\n  // console.log(c, s);\r\n  const ref = useRef();\r\n  const svg = d3.select(ref.current);\r\n  const [dbData, setDbData] = useState([]);\r\n\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const endMonth = useSelector((state) => state.detail.endMonth);\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const country = useSelector((state) => state.detail.country);\r\n  const musicid = useSelector((state) => state.detail.musicid);\r\n  const isSwmpltChoosed = useSelector((state) => state.detail.isSwmpltChoosed);\r\n  const swarmpltMin = useSelector((state) => state.detail.swarmpltMin);\r\n  const swarmpltMax = useSelector((state) => state.detail.swarmpltMax);\r\n  const [Max, setMax] = useState(-Infinity);\r\n  const [Min, setMin] = useState(Infinity);\r\n\r\n  useEffect(() => {\r\n    let max = -Infinity;\r\n    let min = Infinity;\r\n    (async () => {\r\n      const data = await fetchSwarmplt(s, feature, c);\r\n      const musicdata = {};\r\n      data.map((d) => {\r\n        if (!musicdata[d.musicid]) {\r\n          musicdata[d.musicid] = {\r\n            musicid: d.musicid,\r\n            stream: d.stream,\r\n            name: d.name,\r\n            [feature]: d[feature],\r\n          };\r\n          if (swarmpltMax < d[feature]) {\r\n            dispatch(changeSwarmpltMax(d[feature]));\r\n          }\r\n          if (swarmpltMin > d[feature]) {\r\n            dispatch(changeSwarmpltMin(d[feature]));\r\n          }\r\n        } else {\r\n          musicdata[d.musicid].stream = musicdata[d.musicid].stream + d.stream;\r\n        }\r\n      });\r\n      const a = Object.keys(musicdata).map((m) => {\r\n        return musicdata[m];\r\n      });\r\n      setDbData(a);\r\n      // setMin(min);\r\n      // setMax(max);\r\n    })();\r\n\r\n    d3.select(ref.current)\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n  }, [startMonth, endMonth, feature, country]);\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  }, [dbData]);\r\n\r\n  const checkColor = (item) => {\r\n    let opacity = 0;\r\n    let opacityMax = 1;\r\n    let opacityMin = 0.1;\r\n    opacity =\r\n      ((opacityMax - opacityMin) * (item - swarmpltMin)) /\r\n        (swarmpltMax - swarmpltMin) +\r\n      opacityMin;\r\n    return opacity;\r\n  };\r\n\r\n  const draw = () => {\r\n    const tooltip = d3.select(\".tooltip-swarm\");\r\n    const swarmplt = svg.select(\"g\");\r\n    const xScale = scaleLinear()\r\n      .domain(extent(dbData.map((d) => +d[feature])))\r\n      .range([10, 525]);\r\n\r\n    let streamDomain = extent(dbData.map((d) => d.stream));\r\n    streamDomain = streamDomain.map((d) => Math.sqrt(d));\r\n    let size = scaleLinear().domain(streamDomain).range([2, 13]);\r\n    let simulation = forceSimulation(dbData)\r\n      .force(\r\n        \"x\",\r\n        forceX((d) => {\r\n          return xScale(d[feature]);\r\n        }).strength(5)\r\n      )\r\n      .force(\r\n        \"y\",\r\n        forceY((d) => {\r\n          return 150;\r\n        }).strength(0.2)\r\n      )\r\n      .force(\r\n        \"collide\",\r\n        forceCollide((d) => {\r\n          return size(Math.sqrt(d.stream));\r\n        })\r\n      )\r\n      .alphaDecay(0)\r\n      .alpha(0.3)\r\n\r\n      .on(\r\n        \"tick\",\r\n        () =>\r\n          swarmplt\r\n            .selectAll(\"circle\")\r\n            .data(dbData)\r\n            .join(\"circle\")\r\n            .style(\"fill\", (d) => d3.interpolatePuRd(checkColor(d[feature]))) //左側は重み付き平均の最大最小だけど、右側はトータルの最大最小だから、同じカラーレジェンドだと意味が変わる。→違うカラーを使う\r\n            .attr(\"stroke\", \"black\")\r\n            .on(\"mouseover\", function (d, i) {\r\n              tooltip.style(\"visibility\", \"visible\").html(\"曲名 : \" + i.name);\r\n            })\r\n            .on(\"mousemove\", function (d) {\r\n              tooltip\r\n                .style(\"top\", d.pageY - 20 + \"px\")\r\n                .style(\"left\", d.pageX + 10 + \"px\");\r\n            })\r\n            .on(\"mouseout\", function (d) {\r\n              tooltip.style(\"visibility\", \"hidden\");\r\n            })\r\n            .on(\"click\", (d, i) => {\r\n              dispatch(changeMusicId(i.musicid));\r\n              dispatch(changeIsSwmpltChoosed(true));\r\n              console.log(i.musicid);\r\n            })\r\n            .attr(\"stroke-width\", \"0.1\")\r\n            .attr(\"opacity\", 0.7)\r\n            .attr(\"cx\", (d) => d.x)\r\n            .attr(\"cy\", (d) => d.y)\r\n            .attr(\"r\", (d) => size(Math.sqrt(d.stream)))\r\n            .style(\"cursor\", \"pointer\").append\r\n      );\r\n    let init_decay = setTimeout(function () {\r\n      simulation.alphaDecay(0.1);\r\n    }, 1000);\r\n    const xAxis = d3.axisBottom().scale(xScale); //tickSize(200)で伸ばせる ticks(10)でメモリ数を制限できる\r\n    swarmplt\r\n      .selectAll(\".x.axis\")\r\n      .data([null])\r\n      .join(\"g\")\r\n      .attr(\"class\", \"axisBlack\")\r\n      .classed(\"x axis\", true)\r\n      .attr(\"transform\", `translate(0,-20)`)\r\n      .transition()\r\n      .duration(duration)\r\n      .call(xAxis);\r\n    // checkcountry.map((item, i) => {\r\n    //   // //描画する国である＆空配列でない場合に描画\r\n    //   if (country === item && dbData.length != 0) {\r\n    //     const swarmplt = svg.select(\"g\");\r\n    //     const xScale = scaleLinear()\r\n    //       .domain(extent(dbData.map((d) => +d[feature])))\r\n    //       .range([10, 525]);\r\n\r\n    //     let streamDomain = extent(dbData.map((d) => d.stream));\r\n    //     streamDomain = streamDomain.map((d) => Math.sqrt(d));\r\n    //     let size = scaleLinear().domain(streamDomain).range([2, 13]);\r\n    //     let simulation = forceSimulation(dbData)\r\n    //       .force(\r\n    //         \"x\",\r\n    //         forceX((d) => {\r\n    //           return xScale(d[feature]);\r\n    //         }).strength(5)\r\n    //       )\r\n    //       .force(\r\n    //         \"y\",\r\n    //         forceY((d) => {\r\n    //           return 125;\r\n    //         }).strength(0.2)\r\n    //       )\r\n    //       .force(\r\n    //         \"collide\",\r\n    //         forceCollide((d) => {\r\n    //           return size(Math.sqrt(d.stream));\r\n    //         })\r\n    //       )\r\n    //       .alphaDecay(0)\r\n    //       .alpha(0.3)\r\n\r\n    //       .on(\r\n    //         \"tick\",\r\n    //         () =>\r\n    //           swarmplt\r\n    //             .selectAll(\"circle\")\r\n    //             .data(dbData)\r\n    //             .join(\"circle\")\r\n    //             .style(\"fill\", (d) =>\r\n    //               d3.interpolatePuRd(checkColor(d[feature]))\r\n    //             ) //左側は重み付き平均の最大最小だけど、右側はトータルの最大最小だから、同じカラーレジェンドだと意味が変わる。→違うカラーを使う\r\n    //             .attr(\"stroke\", \"black\")\r\n    //             .on(\"mouseover\", function (d, i) {\r\n    //               tooltip\r\n    //                 .style(\"visibility\", \"visible\")\r\n    //                 .html(\"曲名 : \" + i.name);\r\n    //             })\r\n    //             .on(\"mousemove\", function (d) {\r\n    //               tooltip\r\n    //                 .style(\"top\", d.pageY - 20 + \"px\")\r\n    //                 .style(\"left\", d.pageX + 10 + \"px\");\r\n    //             })\r\n    //             .on(\"mouseout\", function (d) {\r\n    //               tooltip.style(\"visibility\", \"hidden\");\r\n    //             })\r\n    //             .on(\"click\", (d, i) => {\r\n    //               dispatch(changeMusicId(i.musicid));\r\n    //               dispatch(changeIsSwmpltChoosed(true));\r\n    //             })\r\n    //             .attr(\"stroke-width\", \"0.1\")\r\n    //             .attr(\"opacity\", 0.7)\r\n    //             .attr(\"cx\", (d) => d.x)\r\n    //             .attr(\"cy\", (d) => d.y)\r\n    //             .attr(\"r\", (d) => size(Math.sqrt(d.stream)))\r\n    //             .style(\"cursor\", \"pointer\").append\r\n    //       );\r\n    //     let init_decay = setTimeout(function () {\r\n    //       simulation.alphaDecay(0.1);\r\n    //     }, 1000);\r\n    //     const xAxis = d3.axisBottom().scale(xScale); //tickSize(200)で伸ばせる ticks(10)でメモリ数を制限できる\r\n    //     swarmplt\r\n    //       .selectAll(\".x.axis\")\r\n    //       .data([null])\r\n    //       .join(\"g\")\r\n    //       .attr(\"class\", \"axisBlack\")\r\n    //       .classed(\"x axis\", true)\r\n    //       .attr(\"transform\", `translate(0,-20)`)\r\n    //       .transition()\r\n    //       .duration(duration)\r\n    //       .call(xAxis);\r\n    //   } else {\r\n    //     return (\r\n    //       <div>\r\n    //         <button>a</button>\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n    // });\r\n  };\r\n  return (\r\n    <div>\r\n      <Scroll to=\"ScrollToSong\" smooth={true} offset={-20}>\r\n        <div className=\"swmplt-scroll\">\r\n          <svg width=\"650\" height=\"300\" viewBox=\"0 -20 650 350\" ref={ref} />\r\n        </div>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Swarmplt;\r\n","import { count } from \"d3-array\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swarmplt from \"./draw_swarmplt\";\r\nimport * as d3 from \"d3\";\r\nimport \"../tooltip.css\";\r\nimport \"../style.css\";\r\nimport {\r\n  changeStartMonth,\r\n  changeCountry,\r\n  changeIsSwmpltShowed,\r\n  changeSlectedCount,\r\n} from \"../stores/details\";\r\n\r\nfunction AboutQuestion() {\r\n  const selectedCount = useSelector((state) => state.detail.selectedCount);\r\n  const tooltip = d3.select(\".tooltip-questionMark\");\r\n  if (selectedCount) {\r\n    return (\r\n      <div\r\n        className=\"section p-1\"\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <div\r\n          className=\"questionmark\"\r\n          onMouseEnter={(e) => {\r\n            tooltip.style(\"visibility\", \"visible\");\r\n            tooltip\r\n              .style(\"top\", e.pageY - 30 + \"px\")\r\n              .style(\"left\", e.pageX - 500 + \"px\")\r\n              .html(\"曲の再生回数が多いほど円の大きさは大きくなっている。\");\r\n          }}\r\n          onMouseLeave={() => {\r\n            tooltip.style(\"visibility\", \"hidden\");\r\n          }}\r\n        >\r\n          ?\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className=\"section p-1\"\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        {alert(\"一度に表示できるswarmplotは3つまでです。\")}\r\n        <div\r\n          className=\"questionmark\"\r\n          onMouseEnter={(e) => {\r\n            tooltip.style(\"visibility\", \"visible\");\r\n            tooltip\r\n              .style(\"top\", e.pageY - 30 + \"px\")\r\n              .style(\"left\", e.pageX - 500 + \"px\")\r\n              .html(\"曲の再生回数が多いほど円の大きさは大きくなっている。\");\r\n          }}\r\n          onMouseLeave={() => {\r\n            tooltip.style(\"visibility\", \"hidden\");\r\n          }}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          ?\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CheckBox({ countries, startMonths, isSwarmpltShowed }) {\r\n  const dispatch = useDispatch();\r\n  const deleteData = (index) => {\r\n    const newStartMonth = startMonths.filter((m, i) => index != i);\r\n    const newCountries = countries.filter((c, i) => index != i);\r\n    dispatch(changeStartMonth(newStartMonth));\r\n    dispatch(changeCountry(newCountries));\r\n    dispatch(changeSlectedCount(true));\r\n  };\r\n  console.log(isSwarmpltShowed);\r\n  return (\r\n    <div className=\"p-1\" style={{ justifyContent: \"center\" }}>\r\n      {countries.map((element, i) => {\r\n        const year = String(Number(startMonths[i].split(\"-\")[0]));\r\n        let endmonth = String(Number(startMonths[i].split(\"-\")[1]) + 2);\r\n        if (endmonth.length === 1) {\r\n          endmonth = \"0\" + endmonth;\r\n        }\r\n        return (\r\n          <div style={{ width: \"100%\", height: \"100%\" }}>\r\n            <div>\r\n              <label>\r\n                {element}({startMonths[i]}~{endmonth})　\r\n              </label>\r\n              <button\r\n                className=\"delete is-medium\"\r\n                onClick={() => deleteData(i)}\r\n                style={{ float: \"right\" }}\r\n              />\r\n            </div>\r\n            <Swarmplt c={countries[i]} s={startMonths[i]} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Delatebutton() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"content has-text-centered\">\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => {\r\n          dispatch(changeCountry([]));\r\n          dispatch(changeStartMonth([]));\r\n          dispatch(changeIsSwmpltShowed([]));\r\n          dispatch(changeSlectedCount(true));\r\n        }}\r\n      >\r\n        国・期限を選び直す\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Detail = () => {\r\n  const country = useSelector((state) => state.detail.country);\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const choosedCountry = useSelector((state) => state.detail.choosedCountry);\r\n  const choosedFeature = useSelector((state) => state.detail.choosedFeature);\r\n  const choosedPeriod = useSelector((state) => state.detail.choosedPeriod);\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed);\r\n  const isSwarmpltShowed = useSelector((state) => state.detail.isSwmpltShowed);\r\n  const selectedCount = useSelector((state) => state.detail.selectedCount);\r\n\r\n  const [checkboxCountry, setCheckboxCountry] = useState([]);\r\n  const [checkboxStartMonths, setCheckboxStartMonths] = useState([]);\r\n  const [checkboxIsSwartmpltShowed, setCheckboxIsSwarmpltShowed] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCheckboxCountry(country);\r\n      setCheckboxStartMonths(startMonth);\r\n      setCheckboxIsSwarmpltShowed(isSwarmpltShowed);\r\n    })();\r\n  }, [country, startMonth, isSwarmpltShowed]);\r\n\r\n  if (\r\n    choosedCountry === \"No\" &&\r\n    choosedFeature === \"No\" &&\r\n    choosedPeriod === \"No\"\r\n  ) {\r\n    return (\r\n      <div className=\"card-content\" style={{ width: \"100%\" }}>\r\n        <p style={{ fontSize: \"1.25rem\" }}>国・期間・特徴を選んでください。</p>\r\n      </div>\r\n    );\r\n  } else if (checkboxCountry.length === 0 && checkboxStartMonths.length === 0) {\r\n    return (\r\n      <div className=\"card-content\" style={{ height: \"100%\" }}>\r\n        <p style={{ fontSize: \"1.25rem\" }}>国・期間を選んでください。</p>\r\n      </div>\r\n    );\r\n  } else if (\r\n    (choosedCountry === \"Yes\" &&\r\n      choosedFeature === \"Yes\" &&\r\n      choosedPeriod === \"Yes\") ||\r\n    (choosedCountry === \"Yes\" &&\r\n      choosedFeature === \"No\" &&\r\n      choosedPeriod === \"Yes\")\r\n  ) {\r\n    if (!isRegionShowed) {\r\n      return (\r\n        <div className=\"card-content \" style={{ height: \"100%\" }}>\r\n          <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"card-content p-1\" style={{ width: \"100%\" }}>\r\n          <AboutQuestion />\r\n          <CheckBox\r\n            countries={checkboxCountry}\r\n            startMonths={checkboxStartMonths}\r\n            isSwarmpltShowed={checkboxIsSwartmpltShowed}\r\n          />\r\n          <Delatebutton />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    if (choosedCountry === \"No\" && choosedPeriod === \"No\") {\r\n      return (\r\n        <div className=\"card-content \" style={{ height: \"100%\" }}>\r\n          <p style={{ fontSize: \"1.25rem\" }}>\r\n            国・期間を選んでください。\r\n            <br />\r\n            （特徴：{feature}）\r\n          </p>\r\n        </div>\r\n      );\r\n      // } else if (choosedCountry === \"No\" && choosedFeature === \"No\") {\r\n      //   return (\r\n      //     <div className=\"card\" style={{ height: \"100%\" }}>\r\n      //       <div className=\"card-content p-2\">\r\n      //         <div className=\"content\">\r\n      //           <div className=\"card-content\">\r\n      //             <div className=\"content\">\r\n      //               <p style={{ fontSize: \"1.25rem\" }}>\r\n      //                 国・特徴を選んでください。\r\n      //                 <br />\r\n      //                 （期間：{startMonth} ~ {endMonth}）\r\n      //               </p>\r\n      //             </div>\r\n      //           </div>\r\n      //         </div>\r\n      //       </div>\r\n      //     </div>\r\n      //   );\r\n      // } else if (choosedFeature === \"No\" && choosedPeriod === \"No\") {\r\n      // return (\r\n      //   <div className=\"card\" style={{ height: \"100%\" }}>\r\n      //     <div className=\"card-content p-2\">\r\n      //       <div className=\"content\">\r\n      //         <div className=\"card-content\">\r\n      //           <div className=\"content\">\r\n      //             <p style={{ fontSize: \"1.25rem\" }}>\r\n      //               期間・特徴を選んでください。\r\n      //               <br />\r\n      //               （国：{country}）\r\n      //             </p>\r\n      //           </div>\r\n      //         </div>\r\n      //       </div>\r\n      //     </div>\r\n      //   </div>\r\n      // );\r\n      // } else if (choosedCountry === \"No\") {\r\n      //   // return (\r\n      //   //   <div className=\"card\" style={{ height: \"100%\" }}>\r\n      //   //     <div className=\"card-content p-2\">\r\n      //   //       <div className=\"content\">\r\n      //   //         <div className=\"card-content\">\r\n      //   //           <div className=\"content\">\r\n      //   //             <p style={{ fontSize: \"1.25rem\" }}>\r\n      //   //               国を選んでください。\r\n      //   //               <br />\r\n      //   //               （期間：{startMonth} ~ {endMonth}、特徴：{feature}）\r\n      //   //             </p>\r\n      //   //           </div>\r\n      //   //         </div>\r\n      //   //       </div>\r\n      //   //     </div>\r\n      //   //   </div>\r\n      //   // );\r\n      // } else if (choosedFeature === \"No\") {\r\n      //   // return (\r\n      //   //   <div className=\"card\" style={{ height: \"100%\" }}>\r\n      //   //     <div className=\"card-content p-2\">\r\n      //   //       <div className=\"content\">\r\n      //   //         <div className=\"card-content\">\r\n      //   //           <div className=\"content\">\r\n      //   //             <p style={{ fontSize: \"1.25rem\" }}>\r\n      //   //               特徴を選んでください。\r\n      //   //               <br />\r\n      //   //               （国：{country}、期間：{startMonth} ~ {endMonth}）\r\n      //   //             </p>\r\n      //   //           </div>\r\n      //   //         </div>\r\n      //   //       </div>\r\n      //   //     </div>\r\n      //   //   </div>\r\n      //   );\r\n      // } else if (choosedPeriod === \"No\") {\r\n      //   // return (\r\n      //   //   <div className=\"card\" style={{ height: \"100%\" }}>\r\n      //   //     <div className=\"card-content p-2\">\r\n      //   //       <div className=\"content\">\r\n      //   //         <div className=\"card-content\">\r\n      //   //           <div className=\"content\">\r\n      //   //             <p style={{ fontSize: \"1.25rem\" }}>\r\n      //   //               期間を選んでください。\r\n      //   //               <br />\r\n      //   //               （国：{country}、特徴：{feature}）\r\n      //   //             </p>\r\n      //   //           </div>\r\n      //   //         </div>\r\n      //   //       </div>\r\n      //   //     </div>\r\n      //   //   </div>\r\n      //   // );\r\n      // }\r\n    }\r\n  }\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useState } from \"react\";\r\n\r\nconst aboutFeatureAndData = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">＜用語説明について＞</h1>\r\n      （以下の用語説明は\r\n      <a\r\n        href=\"https://developer.spotify.com/documentation/web-api/reference/#objects-index\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        こちら\r\n      </a>\r\n      より直訳したものである。）\r\n      <ul>\r\n      <li><h2 className=\"subtitle is-5\">acousticnessとは？</h2></li>\r\n      <p>\r\n        0.0から1.0までの値で、トラックがアコースティックかどうかを示す。1.0はトラックがアコースティックであるという評価が高いことを表す。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">danceabilityとは？</h2></li>\r\n      <p>\r\n        テンポ、リズムの安定性、ビートの強さ、全体的な規則性などの音楽要素の組み合わせに基づき、トラックがダンスにどの程度適しているかを示す。0.0は最も踊りやすくなく、1.0は最も踊りやすい。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">energyとは？</h2></li>\r\n      <p>\r\n        激しさと活発さを知覚できる程度の数字で表し、0.0から1.0までの値で計測する。通常、エネルギッシュなトラックは早く、大きく、ノイズが多いと感じる。例えば、デスメタルはエネルギーが高いのに対し、バッハの前奏曲は低くなっている。知覚できると判断される要素には、ダイナミックレンジ、音の大きさ、音色、出だし（頭子音）、および一般的なエントロピーが含まれる。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">instrumentalnessとは？</h2></li>\r\n      <p>\r\n        トラックにボーカルが含まれていないかどうかを予測する。なお、「Ooh」と「aah」の音は楽器として取り扱う。ラップやスポークンワード（喋り言葉）のトラックは明らかに「ボーカル」である。楽器性の値が1.0に近いほど、トラックにボーカルコンテンツが含まれていない可能性が高い。0.5を超える値は楽器性の高いトラックを表すが、値が1.0に近づくにつれ、評価が高い（ボーカルを含まない程度）ということを示す。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">livenessとは？</h2></li>\r\n      <p>\r\n        レコードのなかに聴衆の存在がどれくらいあるのかを検出する。値が高いほど、そのトラックがライブで演奏された可能性が高い。\r\n        値が0.8\r\n        を超す場合は、そのトラックがライブ（生演奏）である可能性が高いことを示す。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">loudnessとは？</h2></li>\r\n      <p>\r\n        音の強さ・大きさ、トラックの全体の音の強さ・大きさを示すデシベル数（dB）。値はトラック全体の平均値であり、相関するトラック（同じような感じのトラック）の音の強さ・大きさを比較するときに役立つ。主に物理的な強さ（大きさ）に心理的な相関をもたらす音の品質を指している。値は一般的には-60\r\n        から 0 db までの範囲で示される。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">modeとは？</h2></li>\r\n      <p>\r\n        モードはトラックの様式（長調または短調）、すなわち旋律の音階を示す。長調は１で示され、短調は０で示される。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">speechinessとは？</h2></li>\r\n      <p>\r\n        そのトラックのなかにある話し言葉の存在を検出する。ただのスピーチ\r\n        （トークショー、オーディオ\r\n        ブック、詩等）に似ているような録音であるほど、値は 1.0 に近づく。 0.66\r\n        を超える値は、完全に話し言葉でできているトラックであろうことを示す。\r\n        0.33 から 0.66\r\n        までの値は、セクションまたはレイヤーのいずれかで音楽とスピーチの両方を含み無可能性のあるトラック（ラップ音楽等の場合も含む）を表す。\r\n        0.33\r\n        未満の値であれば、そのトラックはほとんど音楽であり、言葉が含まれていないことの可能性が高くなる。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">tempoとは？</h2></li>\r\n      <p>\r\n        トラック全体で見込まれる毎分時のビート（BPM）。音楽用語では、テンポは特定の曲の速度またはペースを指し、ビートの持続時間の平均から導き出されるものである。\r\n      </p>\r\n      <li><h2 className=\"title is-5\">time_signatureとは？</h2></li>\r\n      <p>曲の長さを示す。</p>\r\n      <li><h2 className=\"title is-5\">valenceとは？</h2></li>\r\n      <p>\r\n        0.0から1.0までの値を用いてそのトラックの音楽的なポジティブさ（陽気さ）を示す。高いほどトラックはよりポジティブに聞こえ（例：幸せ、陽気、陶酔）、低いほどよりネガティブに聞こえる（例：悲しい、落ち込んだ、怒っている）。\r\n      </p>\r\n      </ul>\r\n      <h1 className=\"title\">＜データについて＞</h1>\r\n      <p>\r\n        <a\r\n          href=\"https://spotifycharts.com/regional\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Spotify Chart\r\n        </a>\r\n        にて世界各国のDailyやWeeklyのTop200やViral50のランキングデータがCSV形式でダウンロードできる。\r\n        今回はそこからデータを集め、\r\n        <a\r\n          href=\"https://developer.spotify.com/documentation/web-api/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Spotify API\r\n        </a>\r\n        を使用して可視化した。\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default aboutFeatureAndData;\r\n\r\n//ドロップダウンの場合↓\r\n// const Explanation = (feature) => {\r\n//   if (feature.feature === \"acousticness\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           0.0から1.0までの値で、トラックがアコースティックかどうかを示す。1.0はトラックがアコースティックであるという評価が高いことを表す。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"danceability\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           テンポ、リズムの安定性、ビートの強さ、全体的な規則性などの音楽要素の組み合わせに基づき、トラックがダンスにどの程度適しているかを示す。0.0は最も踊りやすくなく、1.0は最も踊りやすい。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"energy\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           激しさと活発さを知覚できる程度の数字で表し、0.0から1.0までの値で計測する。通常、エネルギッシュなトラックは早く、大きく、ノイズが多いと感じる。例えば、デスメタルはエネルギーが高いのに対し、バッハの前奏曲は低くなっている。知覚できると判断される要素には、ダイナミックレンジ、音の大きさ、音色、出だし（頭子音）、および一般的なエントロピーが含まれる。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"instrumentalness\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           トラックにボーカルが含まれていないかどうかを予測する。なお、「Ooh」と「aah」の音は楽器として取り扱う。ラップやスポークンワード（喋り言葉？）のトラックは明らかに「ボーカル」である。楽器性の値が1.0に近いほど、トラックにボーカルコンテンツが含まれていない可能性が高い。0.5を超える値は楽器性の高いトラックを表すが、値が1.0に近づくにつれ、評価が高い（＝ボーカルを含まない程度）ということを示す。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"liveness\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           活性（イキイキしているさま）レコードのなかに聴衆の存在がどれくらいあるのかを検出する。値が高いほど、そのトラックがライブで演奏された可能性が高い。\r\n//           値が0.8\r\n//           を超す場合は、そのトラックがライブ（生演奏）である可能性が高いことを示す。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"loudness\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           音の強さ・大きさ、トラックの全体の音の強さ・大きさを示すデシベル数\r\n//           （dB）。loudnessの値はトラック全体の平均値であり、相関するトラック（同じような感じのトラック）の音の強さ・大きさを比較するときに役立ちます。loudnessは、主に物理的な強さ（大きさ）に心理的な相関をもたらす音の品質を指している。値は一般的には\r\n//           -60 から 0 db までの範囲で示される。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"mode\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           モードはトラックの様式（長調または短調）、すなわち旋律の音階を示す。長調は１で示され、短調は０で示される。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"speechiness\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           そのトラックのなかにある話し言葉の存在を検出する。ただのスピーチ\r\n//           （トークショー、オーディオ\r\n//           ブック、詩等）に似ているような録音であるほど、値は 1.0 に近づく。 0.66\r\n//           を超える値は、完全に話し言葉でできているトラックであろうことを示す。\r\n//           0.33 から 0.66\r\n//           までの値は、セクションまたはレイヤーのいずれかで音楽とスピーチの両方を含み無可能性のあるトラック（ラップ音楽等の場合も含む）を表す。\r\n//           0.33\r\n//           未満の値であれば、そのトラックはほとんど音楽であり、言葉が含まれていないことの可能性が高くなる。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"tempo\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           トラック全体で見込まれる毎分時のビート（BPM）。音楽用語では、テンポは特定の曲の速度またはペースを指し、ビートの持続時間の平均から導き出されるものである。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"time_signature\") {\r\n//     return (\r\n//       <div>\r\n//         <p>曲の長さ</p>\r\n//       </div>\r\n//     );\r\n//   } else if (feature.feature === \"valence\") {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           0.0から1.0までの値を用いてそのトラックの音楽的なポジティブさ（陽気さ）を示す。高いほどトラックはよりポジティブに聞こえ（例：幸せ、陽気、陶酔）、低いほどよりネガティブに聞こえる（例：悲しい、落ち込んだ、怒っている）。\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// const aboutFeature = () => {\r\n//   const [feature, setFeature] = useState(\"acousticness\");\r\n//   const elements = [\r\n//     \"acousticness\",\r\n//     \"danceability\",\r\n//     \"energy\",\r\n//     \"instrumentalness\",\r\n//     \"liveness\",\r\n//     \"loudness\",\r\n//     \"mode\",\r\n//     \"speechiness\",\r\n//     \"tempo\",\r\n//     \"time_signature\",\r\n//     \"valence\",\r\n//   ];\r\n//   return (\r\n//     <div>\r\n//       <select\r\n//         onChange={(event) => {\r\n//           setFeature(event.target.value);\r\n//         }}\r\n//       >\r\n//         {elements.map((element, i) => {\r\n//           return <option key={i}>{element}</option>;\r\n//         })}\r\n//       </select>\r\n//       <h2 class=\"title is-2\">{feature}とは？</h2>\r\n//       <Explanation feature={feature} />\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { select } from \"d3-selection\";\r\nimport * as topojson from \"topojson\";\r\nimport { fetchData, fetchWorldMapData } from \"../api\";\r\nimport {\r\n  changeCountry,\r\n  changeFeature,\r\n  changeDisplay,\r\n  changeChoosedCountry,\r\n  changeMin,\r\n  changeMax,\r\n} from \"../stores/details\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../tooltip.css\";\r\nimport \"../../src/style.css\";\r\nimport ColorLegend from \"./colorLegend\";\r\n\r\nconst WorldMap = ({ features }) => {\r\n  const dispatch = useDispatch();\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const endMonth = useSelector((state) => state.detail.endMonth);\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const cMax = useSelector((state) => state.detail.max);\r\n  const cMin = useSelector((state) => state.detail.min);\r\n  const display = useSelector((state) => state.detail.display);\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed);\r\n\r\n  const [Max, setMax] = useState(-Infinity);\r\n  const [Min, setMin] = useState(Infinity);\r\n  const [worldMapData, setWorldMapData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      /**TODO:改善 */\r\n      let max = -Infinity;\r\n      let min = Infinity;\r\n      const weightAve = {};\r\n      const data = await fetchWorldMapData(feature, startMonth);\r\n      console.log(data);\r\n      data.map((d) => {\r\n        weightAve[d.countryid] =\r\n          d[\r\n            `SUM ( Ranking.stream * Music.${feature} ) / SUM ( Ranking.stream)`\r\n          ];\r\n        if (max < weightAve[d.countryid]) {\r\n          max = weightAve[d.countryid];\r\n        }\r\n        if (weightAve[d.countryid] < min) {\r\n          min = weightAve[d.countryid];\r\n        }\r\n      });\r\n      setWorldMapData(weightAve);\r\n      // setMax(max);\r\n      // setMin(min);\r\n      if (max < cMax) {\r\n        max = cMax;\r\n        setMax(max);\r\n      } else if (cMax < max) {\r\n        setMax(max);\r\n        dispatch(changeMax(max));\r\n      }\r\n      if (cMin < min) {\r\n        min = cMin;\r\n        setMin(min);\r\n      } else if (min < cMin) {\r\n        setMin(min);\r\n        dispatch(changeMin(min));\r\n      }\r\n    })();\r\n  }, [feature, startMonth]);\r\n\r\n  const colorjudge = (item) => {\r\n    let color = \"white\";\r\n    if (worldMapData[item.properties.ISO_A2]) {\r\n      color = d3.interpolateTurbo(\r\n        opacityjudge(worldMapData[item.properties.ISO_A2])\r\n      );\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const opacityjudge = (item) => {\r\n    let opacity = 0;\r\n    let opacityMax = 1;\r\n    let opacityMin = 0.1;\r\n    opacity =\r\n      ((opacityMax - opacityMin) * (item - Min)) / (Max - Min) + opacityMin;\r\n    return opacity;\r\n  };\r\n\r\n  const width = 630;\r\n  const height = 250;\r\n  const centerPos = [0, 0];\r\n  const scale = 80;\r\n\r\n  const projection = d3\r\n    .geoMercator()\r\n    .center(centerPos)\r\n    .translate([width / 2, height - 60])\r\n    .scale(scale);\r\n  const path = d3.geoPath().projection(projection);\r\n  const tooltip = d3.select(\".tooltip-world\");\r\n\r\n  const [featureValue, setFeatureValue] = useState(null);\r\n  function onChange(onCountry) {\r\n    //console.log(worldMapData[onCountry]);\r\n    if (worldMapData[onCountry] === undefined) {\r\n      setFeatureValue(\"（データなし）\");\r\n    } else {\r\n      setFeatureValue(worldMapData[onCountry].toFixed(3));\r\n    }\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [clientX, setClientX] = useState(0);\r\n  const [clientY, setClientY] = useState(0);\r\n  const [onCountry, setOnCountry] = useState(null);\r\n  function onHover(e, country) {\r\n    const clientX = e.pageX;\r\n    const clientY = e.pageY - 200;\r\n    setShow(true);\r\n    setClientX(clientX);\r\n    setClientY(clientY);\r\n    setOnCountry(country);\r\n  }\r\n\r\n  function onOut() {\r\n    setShow(false);\r\n    setFeatureValue(null);\r\n  }\r\n\r\n  if (!isRegionShowed) {\r\n    return (\r\n      <div className=\"card-content p-2\">\r\n        <div className=\"content\">\r\n          <div className=\"card-content\">\r\n            <div className=\"content\">\r\n              <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"content\">\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">\r\n            {startMonth}~{endMonth}\r\n          </div>\r\n        </div>\r\n        {/* <div\r\n            className=\"card-content p-2 colorLegend\"\r\n            style={{ height: \"10%\" }}\r\n          >\r\n            <div className=\"content\" style={{ height: \"100%\" }}>\r\n              <ColorLegend\r\n                max={Max}\r\n                min={Min}\r\n                color={\"interpolateSpectral\"}\r\n                id={\"gradient2\"}\r\n              />\r\n            </div>\r\n          </div> */}\r\n      </div>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <svg viewBox=\"-30 -30 770 325\">\r\n          <g>\r\n            {features.map((item, i) => (\r\n              <path\r\n                d={path(item)}\r\n                fill={colorjudge(item)}\r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n                strokeOpacity=\"0.5\"\r\n                countryname={item}\r\n                onMouseOver={() => onChange(item.properties.ISO_A2)}\r\n                onMouseMove={(e) => {\r\n                  onHover(e, item.properties.NAME_JA);\r\n                  tooltip.style(\"visibility\", \"visible\");\r\n                  tooltip\r\n                    .style(\"top\", e.pageY - 20 + \"px\")\r\n                    .style(\"left\", e.pageX + 10 + \"px\")\r\n                    .html(onCountry + \" \" + featureValue);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  tooltip.style(\"visibility\", \"hidden\");\r\n                }}\r\n                onMouseOut={() => onOut()}\r\n                onClick={() => {\r\n                  //console.log(item.properties.ISO_A2);\r\n                  const c = item.properties.ISO_A2;\r\n                  dispatch(changeChoosedCountry(\"Yes\"));\r\n                  dispatch(changeCountry(c));\r\n                  dispatch(changeDisplay(\"Yes\"));\r\n                }}\r\n                key={i}\r\n              />\r\n            ))}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DrowWorldMap = () => {\r\n  const [features, setFeatures] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`${process.env.PUBLIC_URL}/data/worldmap.json`);\r\n      const data = await res.json();\r\n      const { features } = topojson.feature(data, data.objects.worldmap);\r\n      setFeatures(features);\r\n    })();\r\n  }, []);\r\n  if (features == null) {\r\n    return <p>loading</p>;\r\n  }\r\n  return <WorldMap features={features} />;\r\n};\r\n","import React from \"react\";\r\nimport { DrowWorldMap } from \"./drow_worldmap\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  changeFeature,\r\n  changeStartMonth,\r\n  changeEndMonth,\r\n} from \"../stores/details\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst WorldMap = () => {\r\n  const dispatch = useDispatch();\r\n  const [year, setYear] = useState(0);\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const endMonth = useSelector((state) => state.detail.endMonth);\r\n  //let start = textYear[0][0];\r\n  //let end = textYear[0][1];\r\n  return <DrowWorldMap />;\r\n};\r\n\r\nexport default WorldMap;\r\n","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"../api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeStartMonth,\r\n  changeEndMonth,\r\n  changeCountry,\r\n  changeChoosedCountry,\r\n  changeChoosedPeriod,\r\n  changeIsSwmpltShowed,\r\n  changeSlectedCount,\r\n} from \"../stores/details\";\r\n\r\nfunction VerticalAxis({ len, yAxis, name, h }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <g>\r\n      <text\r\n        transform={`\r\n                translate(-60, ${(len * yAxis.length) / 2})\r\n               `}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"central\"\r\n        fontSize=\"12\"\r\n        style={{ userSelect: \"none\" }}\r\n      >\r\n        {name}\r\n      </text>\r\n      {yAxis.map((y, i) => {\r\n        return (\r\n          <g transform={`translate(0, ${len * i + len / 2})`} key={i}>\r\n            <text\r\n              x=\"-5\"\r\n              textAnchor=\"end\"\r\n              dominantBaseline=\"central\"\r\n              fontSize=\"8\"\r\n              style={{ userSelect: \"none\" }}\r\n              // onClick={() => {\r\n              //   dispatch(changeChoosedCountry(\"Yes\"));\r\n              //   dispatch(changeCountry(y));\r\n              // }}\r\n            >\r\n              {y}\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n}\r\n\r\nfunction HorizontalAxis({ len, term, name, w }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <g>\r\n      <text\r\n        transform={`translate(${w / 2} -40)`}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"central\"\r\n        fontSize=\"12\"\r\n        style={{ userSelect: \"none\" }}\r\n      >\r\n        {name}\r\n      </text>\r\n      {term.map((t, i) => {\r\n        return (\r\n          <g transform={`translate(${len * i + len}, -15) rotate(-45)`} key={i}>\r\n            <text\r\n              x=\"0\"\r\n              textAnchor=\"middle\"\r\n              dominantBaseline=\"central\"\r\n              fontSize=\"8\"\r\n              style={{ userSelect: \"none\" }}\r\n              onClick={() => {\r\n                dispatch(changeChoosedPeriod(\"Yes\"));\r\n                dispatch(changeStartMonth(t.start));\r\n                dispatch(changeEndMonth(t.end));\r\n              }}\r\n            >\r\n              <a>{t.start}</a>\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n}\r\n\r\nconst CountryHeatMap = () => {\r\n  const dispatch = useDispatch();\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const regionId = useSelector((state) => state.detail.regionId);\r\n\r\n  const countryids = useSelector((state) => state.detail.country);\r\n  const period = useSelector((state) => state.detail.startMonth);\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed);\r\n  const isSwmpltShowed = useSelector((state) => state.detail.isSwmpltShowed);\r\n  const Max = useSelector((state) => state.detail.max);\r\n  const Min = useSelector((state) => state.detail.min);\r\n  const selectedCount = useSelector((state) => state.detail.selectedCount);\r\n\r\n  const startdays = [\r\n    \"2017-01\",\r\n    \"2017-04\",\r\n    \"2017-07\",\r\n    \"2017-10\",\r\n    \"2018-01\",\r\n    \"2018-04\",\r\n    \"2018-07\",\r\n    \"2018-10\",\r\n    \"2019-01\",\r\n    \"2019-04\",\r\n    \"2019-07\",\r\n    \"2019-10\",\r\n    \"2020-01\",\r\n    \"2020-04\",\r\n    \"2020-07\",\r\n    \"2020-10\",\r\n    \"2021-01\",\r\n    \"2021-04\",\r\n    \"2021-07\",\r\n  ];\r\n\r\n  const term = [\r\n    { start: \"2017-01\", end: \"2017-03\" },\r\n    { start: \"2017-04\", end: \"2017-06\" },\r\n    { start: \"2017-07\", end: \"2017-09\" },\r\n    { start: \"2017-10\", end: \"2017-12\" },\r\n    { start: \"2018-01\", end: \"2018-03\" },\r\n    { start: \"2018-04\", end: \"2018-06\" },\r\n    { start: \"2018-07\", end: \"2018-09\" },\r\n    { start: \"2018-10\", end: \"2018-12\" },\r\n    { start: \"2019-01\", end: \"2019-03\" },\r\n    { start: \"2019-04\", end: \"2019-06\" },\r\n    { start: \"2019-07\", end: \"2019-09\" },\r\n    { start: \"2019-10\", end: \"2019-12\" },\r\n    { start: \"2020-01\", end: \"2020-03\" },\r\n    { start: \"2020-04\", end: \"2020-06\" },\r\n    { start: \"2020-07\", end: \"2020-09\" },\r\n    { start: \"2020-10\", end: \"2020-12\" },\r\n    { start: \"2021-01\", end: \"2021-03\" },\r\n    { start: \"2021-04\", end: \"2021-06\" },\r\n    { start: \"2021-07\", end: \"2021-09\" },\r\n  ];\r\n\r\n  const [clicked, setClicked] = useState(-1);\r\n  const [pos, setPos] = useState(null);\r\n\r\n  const margin = {\r\n    left: 100,\r\n    right: 30,\r\n    top: 10,\r\n    bottom: 10,\r\n  };\r\n  const contentWidth = 300;\r\n  const contentHeight = 170;\r\n  const svgWidth = margin.left + margin.right + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n  const tooltip = d3.select(\".tooltip-countryheat\");\r\n  const [featureValue, setFeatureValue] = useState(null);\r\n  const len = 15;\r\n\r\n  const [heatMapData, setHeatMapData] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  let checkMin;\r\n  let checkMax;\r\n  const [showed, setShowed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let country = [];\r\n      let min = Min;\r\n      let max = Max;\r\n      checkMin = Infinity;\r\n      checkMax = -Infinity;\r\n      setShowed(false);\r\n      const aveWeight = {};\r\n      for (let i = 0; i < startdays.length; i++) {\r\n        let data = await fetchData(feature, startdays[i], regionId);\r\n        data.map((d, j) => {\r\n          if (!aveWeight[d.countryid]) {\r\n            country.push(d.countryid);\r\n            aveWeight[d.countryid] = {};\r\n          }\r\n\r\n          aveWeight[d.countryid][startdays[i]] = d.value;\r\n        });\r\n      }\r\n      setCountries(country);\r\n      setHeatMapData(aveWeight);\r\n      if (max != checkMax && min != checkMin) {\r\n        checkMin = min;\r\n        checkMax = max;\r\n        setShowed(true);\r\n      }\r\n    })();\r\n  }, [feature, regionId]);\r\n\r\n  const colorjudge = (item, start) => {\r\n    let color = \"#F2F2F2\";\r\n\r\n    if (item) {\r\n      color = d3.interpolateTurbo(opacityjudge(item, start));\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const opacityjudge = (item, start) => {\r\n    let opacity = 0;\r\n    let opacityMax = 1;\r\n    let opacityMin = 0.1;\r\n    opacity =\r\n      ((opacityMax - opacityMin) * (item - Min)) / (Max - Min) + opacityMin;\r\n    return opacity;\r\n  };\r\n\r\n  function onHover(e, value) {\r\n    if (value === undefined) {\r\n      setFeatureValue(\"（データなし）\");\r\n    } else {\r\n      setFeatureValue(value.toFixed(3));\r\n    }\r\n    tooltip.style(\"visibility\", \"visible\");\r\n    tooltip\r\n      .style(\"top\", e.pageY - 20 + \"px\")\r\n      .style(\"left\", e.pageX + 10 + \"px\")\r\n      .html(featureValue);\r\n  }\r\n\r\n  function addData(country, startmonth, judge) {\r\n    let selectedCountry = [...countryids];\r\n    let selectedStartmonth = [...period];\r\n    let selectedSwmplt = [...isSwmpltShowed];\r\n    let isdouble = false; //もう選ばれているかどうかを判定する用\r\n\r\n    if (selectedCountry.length === 0) {\r\n      selectedCountry.push(country);\r\n      selectedStartmonth.push(startmonth);\r\n      selectedSwmplt.push(judge);\r\n      dispatch(changeCountry(selectedCountry));\r\n      dispatch(changeStartMonth(selectedStartmonth));\r\n      dispatch(changeIsSwmpltShowed(selectedSwmplt));\r\n    } else if (selectedCountry.length != 0) {\r\n      selectedCountry.map((element, i) => {\r\n        if (element === country && selectedStartmonth[i] === startmonth) {\r\n          isdouble = true;\r\n        }\r\n      });\r\n      if (!isdouble) {\r\n        selectedCountry.push(country);\r\n        selectedStartmonth.push(startmonth);\r\n        selectedSwmplt.push(judge);\r\n        dispatch(changeCountry(selectedCountry));\r\n        dispatch(changeStartMonth(selectedStartmonth));\r\n        dispatch(changeIsSwmpltShowed(selectedSwmplt));\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!showed || !isRegionShowed) {\r\n    return (\r\n      <div className=\"card-content\">\r\n        <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"card-content p-1\" style={{ width: \"100%\" }}>\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <svg\r\n          viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}\r\n          style={{ border: \"solid 0px\" }}\r\n        >\r\n          <VerticalAxis\r\n            len={len}\r\n            yAxis={countries}\r\n            name={\"国\"}\r\n            h={contentHeight}\r\n          />\r\n          {/* <HorizontalAxis len={len} term={term} name={\"期間\"} w={contentWidth} /> */}\r\n          <rect\r\n            x=\"0\"\r\n            y=\"0\"\r\n            fill=\"lightgray\"\r\n            height={len * countries.length}\r\n            width={len * startdays.length}\r\n          />\r\n          <g\r\n            onMouseLeave={() => {\r\n              setPos(null);\r\n              // .style(\"visibility\", \"hidden\");\r\n            }}\r\n          >\r\n            {countries.map((y, i) => {\r\n              return startdays.map((s, j) => {\r\n                const startmonth = s;\r\n                const year = String(Number(startmonth.split(\"-\")[0]));\r\n                let endmonth = String(Number(startmonth.split(\"-\")[1]) + 2);\r\n                if (endmonth.length === 1) {\r\n                  endmonth = \"0\" + endmonth;\r\n                }\r\n                if (heatMapData[y][s] === undefined) {\r\n                  return (\r\n                    <g key={i * startdays.length + j}>\r\n                      <rect\r\n                        className=\"cell\"\r\n                        x={len * j}\r\n                        y={len * i}\r\n                        width={len}\r\n                        height={len}\r\n                        fill={colorjudge(heatMapData[y][s], s)}\r\n                        style={{ cursor: \"default\" }}\r\n                        onMouseMove={(e) => onHover(e, heatMapData[y][s])}\r\n                        onMouseLeave={() => {\r\n                          tooltip.style(\"visibility\", \"hidden\");\r\n                        }}\r\n                      ></rect>\r\n                    </g>\r\n                  );\r\n                } else if (period.length === 3) {\r\n                  return (\r\n                    <g key={i * startdays.length + j}>\r\n                      <rect\r\n                        className=\"cell\"\r\n                        x={len * j}\r\n                        y={len * i}\r\n                        width={len}\r\n                        height={len}\r\n                        fill={colorjudge(heatMapData[y][s], s)}\r\n                        style={{ cursor: \"default\" }}\r\n                        onMouseMove={(e) => onHover(e, heatMapData[y][s])}\r\n                        onMouseLeave={() => {\r\n                          tooltip.style(\"visibility\", \"hidden\");\r\n                        }}\r\n                        onClick={() => {\r\n                          dispatch(changeSlectedCount(false));\r\n                          console.log(\"selectedCount false\");\r\n                        }}\r\n                      ></rect>\r\n                    </g>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <g key={i * startdays.length + j}>\r\n                      <rect\r\n                        className=\"cell\"\r\n                        x={len * j}\r\n                        y={len * i}\r\n                        width={len}\r\n                        height={len}\r\n                        fill={colorjudge(heatMapData[y][s], s)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                          setClicked(i * startdays.length + j);\r\n                          // 国ヒートマップは期間と国の変更＋初めて期間と国が押された判定が必要。\r\n                          addData(y, s, true);\r\n\r\n                          dispatch(changeEndMonth(year + \"-\" + endmonth));\r\n                          dispatch(changeChoosedCountry(\"Yes\"));\r\n                          dispatch(changeChoosedPeriod(\"Yes\"));\r\n                        }}\r\n                        onMouseEnter={() => {\r\n                          // setPos(heatMapData[y][s].toFixed(2) || \"\");\r\n                        }}\r\n                        onMouseMove={(e) => onHover(e, heatMapData[y][s])}\r\n                        onMouseLeave={() => {\r\n                          tooltip.style(\"visibility\", \"hidden\");\r\n                        }}\r\n                      ></rect>\r\n                      <rect\r\n                        x={len * j}\r\n                        y={len * i}\r\n                        width={len - 0.5}\r\n                        height={len - 0.5}\r\n                        fill=\"none\"\r\n                        stroke=\"black\"\r\n                        opacity={clicked === i * startdays.length + j ? 1 : 0}\r\n                      />\r\n                    </g>\r\n                  );\r\n                }\r\n              });\r\n            })}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryHeatMap;\r\n","import { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { fetchBarData } from \"../api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeCountry,\r\n  changeChoosedPeriod,\r\n  changeChoosedCountry,\r\n} from \"../stores/details\";\r\nimport \"../tooltip.css\";\r\n\r\nfunction BarChart(props) {\r\n  const dispatch = useDispatch();\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const feature = useSelector((state) => state.detail.feature);\r\n  const regionId = useSelector((state) => state.detail.regionId);\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed);\r\n\r\n  const [isChecked, setIsChecked] = useState({});\r\n  const [max, setMax] = useState(-Infinity);\r\n  const [min, setMin] = useState(Infinity);\r\n  const [barData, setBarData] = useState([]);\r\n\r\n  let cnt = 0;\r\n  const [controlWidth, setControlWidth] = useState(500); //棒グラフの横幅を全体的に揃えるために掛ける数\r\n  const margin = {\r\n    left: 50,\r\n    right: 30,\r\n    top: 0,\r\n    bottom: 30,\r\n  };\r\n  const contentWidth = 250;\r\n  const contentHeight = 120;\r\n  const svgWidth = margin.left + margin.right + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n  const tooltip = d3.select(\".tooltip-bar\");\r\n  const [featureValue, setFeatureValue] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let regionMax = -Infinity;\r\n      let regionMin = Infinity;\r\n      const countries = {};\r\n      const data = await fetchBarData(feature, startMonth, regionId);\r\n      data.map((d) => {\r\n        countries[d.countryid] = true;\r\n        if (d.value < regionMin) {\r\n          regionMin = d.value;\r\n        }\r\n        if (d.value > regionMax) {\r\n          regionMax = d.value;\r\n        }\r\n      });\r\n      setMax(regionMax);\r\n      setMin(regionMin);\r\n      setBarData(data);\r\n      setIsChecked(countries);\r\n\r\n      //今のところそれぞれ掛けて100以上になるようにしている状態\r\n      if (feature === \"danceability\") {\r\n        setControlWidth(200);\r\n      } else if (feature === \"energy\" || feature === \"valence\") {\r\n        setControlWidth(300);\r\n      } else if (feature === \"instrumentalness\") {\r\n        setControlWidth(10000);\r\n      } else if (feature === \"liveness\" || feature === \"speechiness\") {\r\n        setControlWidth(1000);\r\n      } else if (feature === \"loudness\") {\r\n        setControlWidth(-20);\r\n      } else if (feature === \"tempo\") {\r\n        setControlWidth(1);\r\n      } else if (feature === \"time_signature\") {\r\n        setControlWidth(50);\r\n      }else if (feature === \"acousticness\") {\r\n        setControlWidth(500);\r\n      }\r\n    })();\r\n  }, [feature, startMonth, regionId]);\r\n\r\n  const colorjudge = (value) => {\r\n    const color = d3.interpolateTurbo(opacityjudge(value));\r\n    return color;\r\n  };\r\n\r\n  const opacityjudge = (item) => {\r\n    let opacity = 0;\r\n    let opacityMax = 1;\r\n    let opacityMin = 0.1;\r\n    opacity =\r\n      ((opacityMax - opacityMin) * (item - min)) / (max - min) + opacityMin;\r\n    return opacity;\r\n  };\r\n\r\n  function onHover(e, value) {\r\n    const clientX = e.pageX;\r\n    const clientY = e.pageY - 200;\r\n    if (value === undefined) {\r\n      setFeatureValue(\"（データなし）\");\r\n    } else {\r\n      setFeatureValue(value.toFixed(3));\r\n    }\r\n    tooltip.style(\"visibility\", \"visible\");\r\n    tooltip\r\n      .style(\"top\", e.pageY - 20 + \"px\")\r\n      .style(\"left\", e.pageX + 10 + \"px\")\r\n      .html(featureValue);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const cid = e.target.name;\r\n    setIsChecked({ ...isChecked, [cid]: !isChecked[cid] });\r\n  };\r\n\r\n  if (!isRegionShowed) {\r\n    return (\r\n      <div className=\"card-content p-2\">\r\n        <div className=\"content\">\r\n          <div className=\"card-content\">\r\n            <div className=\"content\">\r\n              <p style={{ fontSize: \"1.25rem\" }}>データ取得中・・・</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div className=\"card-content m-1\">\r\n          <div className=\"content\">\r\n            <div style={{ marginBottom: \"5px\" }}>\r\n              {barData.map((data) => {\r\n                return (\r\n                  <label className=\"checkbox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isChecked[data.countryid]}\r\n                      name={data.countryid}\r\n                      value={isChecked[data.countryid]}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {data.countryid}\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <svg\r\n        viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}\r\n        style={{ border: \"solid 0px\" }}\r\n      >\r\n        <g>\r\n          {(cnt = 0)}\r\n          {barData.map((d, i) => {\r\n            console.log(d.value * controlWidth);\r\n            return isChecked[d.countryid] ? (\r\n              <g>\r\n                {(cnt += 1)}\r\n                <rect\r\n                  x=\"0\"\r\n                  y={13 * (cnt - 1)}\r\n                  width={d.value * controlWidth}\r\n                  height={13}\r\n                  fill={colorjudge(d.value)}\r\n                  onMouseMove={(e) => {\r\n                    onHover(e, d.value);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    tooltip.style(\"visibility\", \"hidden\");\r\n                  }}\r\n                  onClick={() => {\r\n                    dispatch(changeCountry(d.countryid));\r\n                    dispatch(changeChoosedPeriod(\"Yes\"));\r\n                    dispatch(changeChoosedCountry(\"Yes\"));\r\n                  }}\r\n                ></rect>\r\n                <text\r\n                  x=\"-10\"\r\n                  y={13 * cnt - 5}\r\n                  textAnchor=\"middle\"\r\n                  dominantBaseline=\"central\"\r\n                  fontSize=\"6\"\r\n                  style={{ userSelect: \"none\" }}\r\n                  onClick={() => {\r\n                    dispatch(changeCountry(d.countryid));\r\n                    dispatch(changeChoosedCountry(\"Yes\"));\r\n                  }}\r\n                >\r\n                  <a>{d.countryid}</a>\r\n                </text>\r\n              </g>\r\n            ) : (\r\n              console.log(isChecked[d.countryid])\r\n            );\r\n          })}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React from \"react\";\r\nimport Bargraph from \"./draw_bargraph\";\r\n\r\nconst Bar = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Bargraph />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeCountry,\r\n  changeEndMonth,\r\n  changeStartMonth,\r\n  changeMax,\r\n  changeMin,\r\n  changeDisplay,\r\n  changeJudgeVis,\r\n} from \"../stores/details\";\r\nimport WorldMap from \"./WorldMap\";\r\nimport CountryHeatMap from \"./CountryHeatMap\";\r\nimport Bargraph from \"./Bargraph\";\r\n\r\nconst JudgeVis = () => {\r\n  const dispatch = useDispatch();\r\n  const startMonth = useSelector((state) => state.detail.startMonth);\r\n  const endMonth = useSelector((state) => state.detail.endMonth);\r\n  const judgeVis = useSelector((state) => state.detail.judgeVis);\r\n  const isRegionShowed = useSelector((state) => state.detail.isRegionShowed); //\r\n  //console.log(\"judgeVis :\" + judgeVis);\r\n\r\n  if (\r\n    (judgeVis === 0 && !isRegionShowed) ||\r\n    (judgeVis === 0 && isRegionShowed)\r\n  ) {\r\n    //何も押されていない場合\r\n    return (\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <p style={{ fontSize: \"1.25rem\" }}>\r\n            ヒートマップより地域を選んでください。\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (judgeVis === 1) {\r\n    //期間が押された場合\r\n    return (\r\n      <div className=\"card-content p-1\" style={{ height: \"100%\" }}>\r\n        <WorldMap />\r\n      </div>\r\n    );\r\n  } else if (judgeVis === 2) {\r\n    //国が押された場合\r\n    return (\r\n      <CountryHeatMap />\r\n    );\r\n  } else {\r\n    //セル（国と期間）が押された場合\r\n    return (\r\n      <div className=\"card-content p-1\" style={{ height: \"100%\" }}>\r\n        <Bargraph />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default JudgeVis;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport FeatureVis from \"./FeatureVis\";\r\nimport RegionHeatMap from \"./RegionHeatMap\";\r\nimport SimilarSongs from \"./SimilarSongs\";\r\nimport Song from \"./Song\";\r\nimport Ranking from \"./Ranking\";\r\nimport Detail from \"./Detail\";\r\nimport AboutFeatureAndData from \"./aboutFeatureAndData\";\r\nimport JudgeVis from \"./JudgeVis\";\r\nimport * as d3 from \"d3\";\r\nimport \"../tooltip.css\";\r\n\r\nconst Visualization = () => {\r\n  const tooltip = d3.select(\".tooltip-questionMark\");\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"section p-1\"\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <div\r\n          className=\"questionmark\"\r\n          onMouseEnter={(e) => {\r\n            tooltip.style(\"visibility\", \"visible\");\r\n            tooltip\r\n              .style(\"top\", e.pageY - 30 + \"px\")\r\n              .style(\"left\", e.pageX - 550 + \"px\")\r\n              .html(\r\n                \"これら3曲は左から順にグローバル・日本・クリスマスの各カテゴリの中で最も再生された曲となっている。 \\\r\n                また、それぞれの曲が配信されている国を世界地図にて赤色で塗りつぶしている。\"\r\n              );\r\n          }}\r\n          onMouseLeave={() => {\r\n            tooltip.style(\"visibility\", \"hidden\");\r\n          }}\r\n        >\r\n          ?\r\n        </div>\r\n      </div>\r\n      <FeatureVis />\r\n      <div className=\"tile is-ancestor\">\r\n        <div className=\"tile is-parent\">\r\n          <article className=\"tile is-child box\">\r\n            <div id=\"ScrollToHeatmap\">\r\n              <RegionHeatMap />\r\n              <JudgeVis />\r\n            </div>\r\n          </article>\r\n        </div>\r\n        <div className=\"tile is-parent\">\r\n          <article className=\"tile is-child box\">\r\n            <Detail />\r\n          </article>\r\n        </div>\r\n      </div>\r\n      <div className=\"tile is-ancestor\">\r\n        <div className=\"tile is-parent\">\r\n          <article className=\"tile is-child box\">\r\n            <div id=\"ScrollToSong\">\r\n              <Song />\r\n            </div>\r\n          </article>\r\n        </div>\r\n        <div className=\"tile is-parent\">\r\n          <article className=\"tile is-child box\">\r\n            <SimilarSongs />\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FeatureAndData = () => {\r\n  return (\r\n    <div className=\"tile is-ancestor\">\r\n      <div className=\"tile is-parent \">\r\n        <article className=\"tile is-child notification\">\r\n          <div className=\"content\">\r\n            <div className=\"content\">\r\n              <AboutFeatureAndData />\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = () => {\r\n  const [active, setActive] = useState(\"Vis\");\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"hero is-fluid is-danger is-small\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container has-text-centered is-divider\">\r\n            <h1 className=\"title\">The music around the world.</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-foot\">\r\n          <nav className=\"tabs is-boxed is-fullwidth has-text-black\">\r\n            {\" \"}\r\n            {/* 文字色を設定しないとタブを選んでいる間白文字で見えない */}\r\n            <div className=\"container\">\r\n              <ul>\r\n                <li\r\n                  className={active === \"Vis\" && \"is-active\"}\r\n                  onClick={() => setActive(\"Vis\")}\r\n                >\r\n                  <Link to=\"/\">ビジュアライゼーション</Link>\r\n                </li>\r\n                <li\r\n                  className={active === \"FandD\" && \"is-active\"}\r\n                  onClick={() => setActive(\"FandD\")}\r\n                >\r\n                  <Link to=\"/aboutFeatureAndData\">\r\n                    用語説明・データについて\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </section>\r\n      <div className=\"content\">\r\n        <section className=\"section\">\r\n          <Route path=\"/\" exact>\r\n            <Visualization />\r\n          </Route>\r\n          <Route path=\"/aboutFeatureAndData\" exact>\r\n            <FeatureAndData />\r\n          </Route>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>&copy; 2021 koizumi hatasa miura moriya watanabe</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./style.css\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport detailReducer from \"./details\";\r\n\r\n//sliceをくっつけてstoreとする\r\nconst reducer = combineReducers({\r\n  detail: detailReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport default store;\r\n","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./stores/\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#content\")\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//変数の宣言\r\nconst initialState = {\r\n  startMonth: [],\r\n  endMonth: \"2018-03\",\r\n  feature: \"acousticness\",\r\n  country: [],\r\n  musicid: \"a\",\r\n  max: -Infinity,\r\n  min: Infinity,\r\n  sorted: \"昇順\",\r\n  display: \"No\",\r\n  judgeVis: 0,\r\n  choosedCountry: \"No\",\r\n  choosedFeature: \"No\",\r\n  choosedPeriod: \"No\",\r\n  regionId: \"\",\r\n  isRegionShowed: false,\r\n  isSwmpltChoosed: false,\r\n  isSwmpltShowed: [],\r\n  selectClicked: false,\r\n  checkRaderFeatureClicked: [\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ],\r\n  checkRegionClicked: [\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ],\r\n  swarmpltMin: Infinity,\r\n  swarmpltMax: -Infinity,\r\n  selectedCount: true,\r\n};\r\n\r\n//storeと呼ばれるデータの格納場所をsliceという名前で分割して役割ごとにそれぞれの変数で管理する\r\nconst slice = createSlice({\r\n  //userという名前のsliceを作成\r\n  name: \"detail\",\r\n  //初期値としてinitialStateで宣言した値が使われる\r\n  initialState,\r\n  reducers: {\r\n    //ここで関数を作成する\r\n    changeStartMonth: (state, action) => {\r\n      //state.変数名で値を参照、変更できる\r\n      //action.payloadでcompnents.ファイル名で宣言した関数で呼び出した引数を持ってくる\r\n      state.startMonth = action.payload;\r\n      // changeData(changeDBYear(state.year));\r\n    },\r\n    changeEndMonth: (state, action) => {\r\n      state.endMonth = action.payload;\r\n    },\r\n    changeFeature: (state, action) => {\r\n      // console.log(action.payload);\r\n      state.feature = action.payload;\r\n    },\r\n\r\n    changeCountry: (state, action) => {\r\n      state.country = action.payload;\r\n    },\r\n\r\n    changeMusicId: (state, action) => {\r\n      state.musicid = action.payload;\r\n    },\r\n\r\n    changeMax: (state, action) => {\r\n      state.max = action.payload;\r\n    },\r\n\r\n    changeMin: (state, action) => {\r\n      state.min = action.payload;\r\n    },\r\n\r\n    changeSorted: (state, action) => {\r\n      state.sorted = action.payload;\r\n    },\r\n\r\n    changeDisplay: (state, action) => {\r\n      state.display = action.payload;\r\n    },\r\n\r\n    changeJudgeVis: (state, action) => {\r\n      state.judgeVis = action.payload;\r\n    },\r\n\r\n    changeChoosedCountry: (state, action) => {\r\n      state.choosedCountry = action.payload;\r\n    },\r\n\r\n    changeChoosedFeature: (state, action) => {\r\n      state.choosedFeature = action.payload;\r\n    },\r\n\r\n    changeChoosedPeriod: (state, action) => {\r\n      state.choosedPeriod = action.payload;\r\n    },\r\n    changeRegionId: (state, action) => {\r\n      state.regionId = action.payload;\r\n    },\r\n\r\n    changeIsRegionShowed: (state, action) => {\r\n      state.isRegionShowed = action.payload;\r\n    },\r\n\r\n    changeIsSwmpltChoosed: (state, action) => {\r\n      state.isSwmpltChoosed = action.payload;\r\n    },\r\n\r\n    changeIsSwmpltShowed: (state, action) => {\r\n      state.isSwmpltShowed = action.payload;\r\n    },\r\n\r\n    changeSelectClicked: (state, action) => {\r\n      state.selectClicked = action.payload;\r\n    },\r\n\r\n    changeCheckRaderFeatureClicked: (state, action) => {\r\n      state.checkRaderFeatureClicked = action.payload;\r\n    },\r\n\r\n    changeCheckRegionClicked: (state, action) => {\r\n      state.checkRegionClicked = action.payload;\r\n    },\r\n    changeSwarmpltMin: (state, action) => {\r\n      state.swarmpltMin = action.payload;\r\n    },\r\n    changeSwarmpltMax: (state, action) => {\r\n      state.swarmpltMax = action.payload;\r\n    },\r\n    changeSlectedCount: (state, action) => {\r\n      state.selectedCount = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const {\r\n  changeStartMonth,\r\n  changeFeature,\r\n  changeEndMonth,\r\n  changeCountry,\r\n  changeMusicId,\r\n  changeMax,\r\n  changeMin,\r\n  changeSorted,\r\n  changeDisplay,\r\n  changeJudgeVis,\r\n  changeChoosedCountry,\r\n  changeChoosedFeature,\r\n  changeChoosedPeriod,\r\n  changeRegionId,\r\n  changeIsRegionShowed,\r\n  changeIsSwmpltChoosed,\r\n  changeIsSwmpltShowed,\r\n  changeSelectClicked,\r\n  changeCheckRaderFeatureClicked,\r\n  changeCheckRegionClicked,\r\n  changeSwarmpltMax,\r\n  changeSwarmpltMin,\r\n  changeSlectedCount,\r\n} = slice.actions;\r\n"],"sourceRoot":""}
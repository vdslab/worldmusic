{"version":3,"sources":["components/Header.js","components/Footer.js","components/SimilarSongs.js","components/Song.js","components/Ranking.js","components/Detail.js","stores/Count.js","components/HeatMap.js","components/drow_worldmap.js","components/WorldMap.js","App.js","stores/index.js","index.js"],"names":["Header","className","Footer","SimilarSongs","style","height","Song","Ranking","Detail","slice","createSlice","name","initialState","count","reducers","CountUp","state","action","payload","CountDown","actions","HeatMap","WorldMap","features","console","log","useState","data","setData","useEffect","a","fetch","response","json","sql","projection","d3","center","translate","width","scale","path","class","viewBox","map","item","d","fill","stroke","strokeWidth","strokeOpacity","countryname","onMouseOver","e","select","target","attr","onMouseOut","onClick","properties","ISO_A2","DrowWorldMap","setFeatures","process","res","topojson","objects","worldmap","year","setYear","startPeriod","setStartPeriod","endPeriod","setEndPeriod","textAboutYear","onChange","event","value","element","i","type","id","min","max","step","for","App","reducer","combineReducers","user","userReducer","store","configureStore","render","document","querySelector"],"mappings":"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","file":"static/js/main.063c75b4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <section className=\"hero is-fluid is-danger is-small\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered s-divider\">\r\n          <h1 className=\"title\">About music aroud the world.</h1>\r\n          <h2 className=\"subtitle\">\r\n            このサイトは、可視化によって世界各国の音楽の特徴を捉えることを目的としています。\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>&copy; 2021 koizumi hatasa miura moriya watanabe</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst SimilarSongs = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"24.25vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">類似曲</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarSongs;\r\n","import React from \"react\";\r\n\r\nconst Song = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"24.25vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">曲</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst Ranking = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"50vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">ランキング</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ranking;\r\n","import React from \"react\";\r\n\r\nconst Detail = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"30vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">詳細</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//変数の宣言\r\nconst initialState = {\r\n  count: 0,\r\n};\r\n\r\n//storeと呼ばれるデータの格納場所をsliceという名前で分割して役割ごとにそれぞれの変数で管理する\r\nconst slice = createSlice({\r\n  //userという名前のsliceを作成\r\n  name: \"user\",\r\n  //初期値としてinitialStateで宣言した値が使われる\r\n  initialState,\r\n  reducers: {\r\n    //ここで関数を作成する\r\n    CountUp: (state, action) => {\r\n      //state.変数名で値を参照、変更できる\r\n      //action.payloadでcompnents.ファイル名で宣言した関数で呼び出した引数を持ってくる\r\n      state.count += action.payload;\r\n    },\r\n    CountDown: (state, action) => {\r\n      state.count -= action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const { CountUp, CountDown } = slice.actions;\r\n","import React from \"react\";\r\n\r\nconst HeatMap = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"40vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">ヒートマップ</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeatMap;\r\n","import { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { select } from \"d3-selection\";\r\nimport * as topojson from \"topojson\";\r\n\r\nconst WorldMap = ({ features }) => {\r\n  console.log(1);\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"/.netlify/functions/getData\");\r\n      const sql = await response.json();\r\n      setData(sql);\r\n    })();\r\n  }, []);\r\n  const margin = {\r\n    top: 30,\r\n    bottom: 50,\r\n    left: 50,\r\n    right: 100,\r\n  };\r\n\r\n  const width = 900;\r\n  const height = 500;\r\n  const centerPos = [0, 0];\r\n  const scale = 78;\r\n\r\n  const projection = d3\r\n    .geoMercator()\r\n    .center(centerPos)\r\n    .translate([width / 2, height / 2])\r\n    .scale(scale);\r\n\r\n  const path = d3.geoPath().projection(projection);\r\n\r\n  //const svgWidth = margin.left+margin.right+width;\r\n  //const svgHeight = -margin.bottom+margin.top+height;\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div class=\"#map-container\" style={{ height: \"40vh\" }}>\r\n      <svg width=\"800\" height=\"280\" viewBox=\"50 50 800 280\">\r\n        <g>\r\n          {features.map((item) => (\r\n            <path\r\n              d={path(item)}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth=\"1\"\r\n              strokeOpacity=\"0.5\"\r\n              countryname={item}\r\n              onMouseOver={(e) => {\r\n                select(e.target).attr(\"stroke\", \"red\");\r\n              }}\r\n              onMouseOut={(e) => {\r\n                select(e.target).attr(\"stroke\", \"black\");\r\n              }}\r\n              onClick={(e) => {\r\n                console.log(item.properties.ISO_A2);\r\n              }}\r\n            />\r\n          ))}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DrowWorldMap = () => {\r\n  const [features, setFeatures] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`${process.env.PUBLIC_URL}/data/worldmap.json`);\r\n      const data = await res.json();\r\n      const { features } = topojson.feature(data, data.objects.worldmap);\r\n      setFeatures(features);\r\n    })();\r\n  }, []);\r\n  if (features == null) {\r\n    return <p>loading</p>;\r\n  }\r\n  return <WorldMap features={features} />;\r\n};\r\n","import React from \"react\";\r\nimport { DrowWorldMap } from \"./drow_worldmap\";\r\nimport { useState } from \"react\";\r\n\r\nconst WorldMap = () => {\r\n  const [year, setYear] = useState(0);\r\n  const [startPeriod,setStartPeriod] = useState(\"2017-01\");\r\n  const [endPeriod,setEndPeriod] = useState(\"2017-06\");\r\n  const elements = [\"acousticness\",\"danceability\",\"energy\",\"instrumentalness\",\"liveness\",\"loudness\",\"mode\",\"speechiness\",\"tempo\",\"time_signature\",\"valence\"];\r\n  const textAboutYear = [[\"2017-01\",\"2017-06\"],[\"2017-07\",\"2017-12\"],[\"2018-01\",\"2018-06\"],[\"2018-07\",\"2018-12\"],[\"2019-01\",\"2019-06\"],[\"2019-07\",\"2019-12\"],[\"2020-01\",\"2020-06\"],[\"2020-07\",\"2020-12\"]];\r\n  //let start = textYear[0][0];\r\n  //let end = textYear[0][1];\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"40vh\" }}>\r\n        <div className=\"card-content\" style={{ height: \"40vh\" }}>\r\n          <div className=\"content\">\r\n            <div className=\"select is-small\">\r\n              <select onChange={(event) => {console.log(event.target.value);}}>\r\n                {elements.map((element,i) => {\r\n                  return(\r\n                    <option>{element}</option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <input \r\n              className=\"slider is-fullwidth\" type=\"range\" id=\"getSliderValue\"\r\n              min=\"0\" max=\"7\" step=\"1\"\r\n              value={year}\r\n              onChange={(event) => {\r\n                //console.log(event.target.value);\r\n                setYear(event.target.value);\r\n                setStartPeriod(textAboutYear[event.target.value][0]);\r\n                setEndPeriod(textAboutYear[event.target.value][1]);\r\n                //start = textYear[event.target.value][0];\r\n                //end = textYear[event.target.value][1];\r\n                //console.log(start);\r\n                //console.log(end);\r\n              }}\r\n            ></input>\r\n            <output for=\"sliderWithValue\">{startPeriod}〜{endPeriod}</output>\r\n            <DrowWorldMap />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n","// import { ResponsiveSwarmPlot } from \"@nivo/swarmplot\";\r\n// import { Drawswarm } from \"./components/swarmplot\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport SimilarSongs from \"./components/SimilarSongs\";\r\nimport Song from \"./components/Song\";\r\nimport Ranking from \"./components/Ranking\";\r\nimport Detail from \"./components/Detail\";\r\nimport Count from \"./components/Count\";\r\nimport \"./style.css\";\r\nimport HeatMap from \"./components/HeatMap\";\r\nimport WorldMap from \"./components/WorldMap\";\r\nimport { check } from \"./api\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"/.netlify/functions/getData\");\r\n      const sql = await response.json();\r\n      setData(sql);\r\n    })();\r\n  }, []);\r\n\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"columns is-gapless\">\r\n        <div className=\"column\">\r\n          <WorldMap />\r\n          <HeatMap />\r\n        </div>\r\n        <div className=\"column\">\r\n          <Detail />\r\n          <div className=\"columns is-gapless\">\r\n            <div className=\"column\">\r\n              <Ranking />\r\n            </div>\r\n            <div className=\"column\">\r\n              <Song />\r\n              <SimilarSongs />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n      {/* {[...Array(9)].map((_, i) => {\r\n        return <Drawswarm data={Jsondata[i]} year={year} />;\r\n      })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport userReducer from \"./Count\";\r\n\r\n//sliceをくっつけてstoreとする\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport default store;\r\n","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./stores/\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#content\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header.js","components/Footer.js","components/SimilarSongs.js","components/Song.js","components/Ranking.js","components/Detail.js","stores/Count.js","components/HeatMap.js","components/drow_worldmap.js","components/WorldMap.js","App.js","stores/index.js","index.js"],"names":["Header","className","Footer","SimilarSongs","style","height","Song","Ranking","Detail","slice","createSlice","name","initialState","count","reducers","CountUp","state","action","payload","CountDown","actions","HeatMap","WorldMap","features","margin","projection","d3","center","translate","width","scale","path","svgWidth","svgHeight","useState","select","viewBox","map","item","d","fill","stroke","strokeWidth","strokeOpacity","onMouseOver","e","target","attr","onMouseOut","DrowWorldMap","setFeatures","useEffect","a","fetch","process","res","json","data","topojson","objects","worldmap","class","step","min","max","value","type","App","setData","response","console","log","reducer","combineReducers","user","userReducer","store","configureStore","render","document","querySelector"],"mappings":"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","file":"static/js/main.d7a24d82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <section className=\"hero is-fluid is-danger is-small\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered s-divider\">\r\n          <h1 className=\"title\">About music aroud the world.</h1>\r\n          <h2 className=\"subtitle\">\r\n            このサイトは、可視化によって世界各国の音楽の特徴を捉えることを目的としています。\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>&copy; 2021 koizumi hatasa miura moriya watanabe</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst SimilarSongs = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"24.25vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">類似曲</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarSongs;\r\n","import React from \"react\";\r\n\r\nconst Song = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"24.25vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">曲</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst Ranking = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"50vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">ランキング</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ranking;\r\n","import React from \"react\";\r\n\r\nconst Detail = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"30vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">詳細</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//変数の宣言\r\nconst initialState = {\r\n  count: 0,\r\n};\r\n\r\n//storeと呼ばれるデータの格納場所をsliceという名前で分割して役割ごとにそれぞれの変数で管理する\r\nconst slice = createSlice({\r\n  //userという名前のsliceを作成\r\n  name: \"user\",\r\n  //初期値としてinitialStateで宣言した値が使われる\r\n  initialState,\r\n  reducers: {\r\n    //ここで関数を作成する\r\n    CountUp: (state, action) => {\r\n      //state.変数名で値を参照、変更できる\r\n      //action.payloadでcompnents.ファイル名で宣言した関数で呼び出した引数を持ってくる\r\n      state.count += action.payload;\r\n    },\r\n    CountDown: (state, action) => {\r\n      state.count -= action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const { CountUp, CountDown } = slice.actions;\r\n","import React from \"react\";\r\n\r\nconst HeatMap = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"40vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">ヒートマップ</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeatMap;\r\n","import {useEffect, useState} from \"react\";\r\nimport  * as d3 from \"d3\";\r\nimport { select } from 'd3-selection';\r\nimport * as topojson from \"topojson\";\r\n\r\nconst WorldMap = ({ features }) => {\r\n    const margin ={\r\n        top:20,\r\n        bottom: 75,\r\n        left :100,\r\n        right:150\r\n    };\r\n    const width = 960;\r\n    const height = 500;\r\n    const centerPos = [0,0];\r\n    const scale = 100;\r\n  \r\n    const projection = d3.geoMercator()\r\n                         .center(centerPos)\r\n                         .translate([width/2,height/2])\r\n                         .scale(scale);\r\n    \r\n    const path = d3.geoPath().projection(projection);\r\n\r\n    const svgWidth = margin.left+margin.right+width;\r\n    const svgHeight = margin.bottom+margin.top+height;\r\n    const [color,setColor] = useState(\"white\");\r\n          \r\n    return (\r\n        <div select=\"#map-container\">\r\n            <svg  viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}>\r\n            <g>\r\n          {features.map(item => (\r\n              <path\r\n                d={path(item)}\r\n                fill=\"white\"  //{Color(item)}\r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n                strokeOpacity=\"0.5\"\r\n                onMouseOver={(e) => {\r\n                  select(e.target)\r\n                    .attr('stroke', 'red')\r\n                }}\r\n                onMouseOut={(e) => {\r\n                  select(e.target)\r\n                    .attr('stroke', 'black')\r\n                }}\r\n              />\r\n            ))\r\n          }\r\n        </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const DrowWorldMap = () => {\r\n    const [features, setFeatures] = useState([]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await fetch(`${process.env.PUBLIC_URL}/data/worldmap.json`);\r\n            const data = await res.json()\r\n            const { features } = topojson.feature(data, data.objects.worldmap);\r\n            setFeatures(features);\r\n        })();\r\n    }, []);\r\n    if (features == null) {\r\n        return <p>loading</p>;\r\n    }\r\n    return <WorldMap features={features}/>;\r\n}","import React from \"react\";\r\nimport { DrowWorldMap } from \"./drow_worldmap\";\r\n\r\nconst WorldMap = () => {\r\n  return (\r\n    <div className=\"my-section\">\r\n      <div className=\"card\" style={{ height: \"40vh\" }}>\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">\r\n            <div className=\"select is-small\">\r\n              <select>\r\n                <option>acousticness</option>\r\n                <option>danceability</option>\r\n                <option>energy</option>\r\n                <option>instrumentalness</option>\r\n                <option>liveness</option>\r\n                <option>loudness</option>\r\n                <option>mode</option>\r\n                <option>speechiness</option>\r\n                <option>tempo</option>\r\n                <option>time_signature</option>\r\n                <option>valence</option>\r\n              </select>\r\n            </div>\r\n            <DrowWorldMap />\r\n            <input\r\n              class=\"slider is-fullwidth\"\r\n              step=\"1\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value=\"50\"\r\n              type=\"range\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n","// import { ResponsiveSwarmPlot } from \"@nivo/swarmplot\";\r\n// import { Drawswarm } from \"./components/swarmplot\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport SimilarSongs from \"./components/SimilarSongs\";\r\nimport Song from \"./components/Song\";\r\nimport Ranking from \"./components/Ranking\";\r\nimport Detail from \"./components/Detail\";\r\nimport Count from \"./components/Count\";\r\nimport \"./style.css\";\r\nimport HeatMap from \"./components/HeatMap\";\r\nimport WorldMap from \"./components/WorldMap\";\r\nimport { check } from \"./api\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"/.netlify/functions/getData\");\r\n      const data = await response.json();\r\n      setData(data);\r\n    })();\r\n  }, []);\r\n\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"columns is-gapless\">\r\n        <div className=\"column\">\r\n          <WorldMap />\r\n          <HeatMap />\r\n        </div>\r\n        <div className=\"column\">\r\n          <Detail />\r\n          <div className=\"columns is-gapless\">\r\n            <div className=\"column\">\r\n              <Ranking />\r\n            </div>\r\n            <div className=\"column\">\r\n              <Song />\r\n              <SimilarSongs />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n      {/* {[...Array(9)].map((_, i) => {\r\n        return <Drawswarm data={Jsondata[i]} year={year} />;\r\n      })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport userReducer from \"./Count\";\r\n\r\n//sliceをくっつけてstoreとする\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport default store;\r\n","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./stores/\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#content\")\r\n);\r\n"],"sourceRoot":""}